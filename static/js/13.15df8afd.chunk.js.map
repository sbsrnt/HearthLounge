{"version":3,"sources":["../static/js/13.15df8afd.chunk.js","containers/pages/reddit/posts/content/body/assets/upvotes.js","containers/pages/reddit/posts/content/body/assets/title.js","containers/pages/reddit/posts/content/body/assets/comments.js","containers/pages/reddit/posts/content/body/assets/created.js","containers/pages/reddit/posts/topbar/topbar.js","containers/pages/reddit/posts/topbar/topbar-left.js","containers/pages/reddit/posts/topbar/topbar-right.js","containers/pages/reddit/posts/content/content.js","containers/pages/reddit/posts/content/header/header.js","containers/pages/reddit/posts/content/header/header-item.js","containers/pages/reddit/posts/content/body/body.js","containers/pages/reddit/posts/content/body/body-item.js","containers/pages/reddit/posts/content/body/body-item-mobile.js","webpack:///./src/containers/pages/reddit/posts/content/content-styles.css?3a85","containers/pages/reddit/posts/content/content-styles.css","webpack:///./src/containers/pages/reddit/styles/reddit-styles.css?853a","containers/pages/reddit/styles/reddit-styles.css","containers/pages/reddit/posts/posts.js","utils/wrap-date.js"],"names":["webpackJsonp","1253","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__components_icon__","RedditPostUpvotes","_ref","post","ups","a","createElement","className","name","1254","__WEBPACK_IMPORTED_MODULE_2_lodash__","__WEBPACK_IMPORTED_MODULE_2_lodash___default","RedditPostTitle","title","domain","link_flair_text","author","type","linkFlairText","unescape","1255","RedditPostComments","num_comments","1256","__WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__","RedditPostCreated","created_utc","edited","Object","1770","__WEBPACK_IMPORTED_MODULE_1__topbar_left__","__WEBPACK_IMPORTED_MODULE_2__topbar_right__","Topbar","1771","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2__utils_posts__","__WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_4__components_icon__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","TopbarLeft","_Component","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","handleDomainClick","e","domainObj","_this$props","selectRedditDomain","selectedDomain","currentTarget","id","active","obj","_this2","map","supportedDomain","icon","onClick","mapStateToProps","state","redditPosts","posts","mapDispatchToProps","dispatch","1772","__WEBPACK_IMPORTED_MODULE_1_lodash__","__WEBPACK_IMPORTED_MODULE_1_lodash___default","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3__utils_posts__","__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_5__components_icon__","TopbarRight","handleCategoryClick","updatePosts","selectRedditCategory","activeCategory","selectedCategory","category","tooltip","tooltipPlacement","startCase","payload","1773","__WEBPACK_IMPORTED_MODULE_2__header_header__","__WEBPACK_IMPORTED_MODULE_3__body_body__","__WEBPACK_IMPORTED_MODULE_4__content_styles_css__","__WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__","Content","_props$posts","all","loading","windowWidth","app","windowSize","1774","__WEBPACK_IMPORTED_MODULE_1__header_item__","RedditPostsHeader","1775","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","RedditHeaderItem","propTypes","string","isRequired","defaultProps","undefined","1776","__WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__","__WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__","__WEBPACK_IMPORTED_MODULE_5__body_item__","__WEBPACK_IMPORTED_MODULE_6__utils_posts__","__WEBPACK_IMPORTED_MODULE_7__body_item_mobile__","RedditPostsBody","handlePostClick","updateActivePost","updatePostComments","postId","find","p","mapPosts","url","kebabCase","mapMobilePosts","filterPostsByDomain","filter","includes","_props","allPosts","isEmpty","1777","__WEBPACK_IMPORTED_MODULE_1_react_router_dom__","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default","__WEBPACK_IMPORTED_MODULE_3__assets_upvotes__","__WEBPACK_IMPORTED_MODULE_4__assets_title__","__WEBPACK_IMPORTED_MODULE_5__assets_comments__","__WEBPACK_IMPORTED_MODULE_6__assets_created__","RedditPostsBodyItem","to","object","1778","__WEBPACK_IMPORTED_MODULE_3_prop_types__","__WEBPACK_IMPORTED_MODULE_3_prop_types___default","__WEBPACK_IMPORTED_MODULE_4__assets_upvotes__","__WEBPACK_IMPORTED_MODULE_5__assets_title__","__WEBPACK_IMPORTED_MODULE_6__assets_comments__","__WEBPACK_IMPORTED_MODULE_7__assets_created__","RedditPostsBodyItemMobile","selftext","1779","exports","content","options","transform","locals","1780","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","1781","1782","693","__WEBPACK_IMPORTED_MODULE_3__topbar_topbar__","__WEBPACK_IMPORTED_MODULE_4__content_content__","__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__","RedditPosts","fetchRedditPostsRequest","document","resetRedditState","_state$redditPosts","765","d","wrapDate","__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip__","__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip___default","__WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now__","__WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now___default","__WEBPACK_IMPORTED_MODULE_3_date_fns_format__","__WEBPACK_IMPORTED_MODULE_3_date_fns_format___default","notEdited","created","createdFormatted","placement","editedWrapper","editedFormatted","toSeconds","time","includeSeconds","addSuffix","timeDifference","editedTimeFormatted"],"mappings":"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","file":"static/js/13.15df8afd.chunk.js","sourcesContent":["webpackJsonp([13],{\n\n/***/ 1253:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(30);\nvar RedditPostUpvotes=function RedditPostUpvotes(_ref){var post=_ref.post;var ups=post.ups;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--upvotes redditPosts__snippet--hasIcon\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"circle-up\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",null,ups));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostUpvotes);\n\n/***/ }),\n\n/***/ 1254:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\nvar RedditPostTitle=function RedditPostTitle(_ref){var post=_ref.post;var title=post.title,domain=post.domain,link_flair_text=post.link_flair_text,author=post.author;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--title\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:domain,type:\"reddit\",domain:domain,linkFlairText:link_flair_text}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"name-details\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"title\"},__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.unescape(title)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"author\"},\"posted by \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"reddit\"}),author))));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostTitle);\n\n/***/ }),\n\n/***/ 1255:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(30);\nvar RedditPostComments=function RedditPostComments(_ref){var post=_ref.post;var num_comments=post.num_comments;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--comments redditPosts__snippet--hasIcon\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"bubbles2\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",null,num_comments));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostComments);\n\n/***/ }),\n\n/***/ 1256:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__ = __webpack_require__(765);\nvar RedditPostCreated=function RedditPostCreated(_ref){var post=_ref.post;var created_utc=post.created_utc,edited=post.edited;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--created\"},Object(__WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__[\"a\" /* wrapDate */])(created_utc,edited));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostCreated);\n\n/***/ }),\n\n/***/ 1770:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__topbar_left__ = __webpack_require__(1771);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__topbar_right__ = __webpack_require__(1772);\nvar Topbar=function Topbar(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'topbar'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__topbar_left__[\"a\" /* default */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__topbar_right__[\"a\" /* default */],null));};/* harmony default export */ __webpack_exports__[\"a\"] = (Topbar);\n\n/***/ }),\n\n/***/ 1771:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_posts__ = __webpack_require__(266);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__ = __webpack_require__(264);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_icon__ = __webpack_require__(30);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TopbarLeft=function(_Component){_inherits(TopbarLeft,_Component);function TopbarLeft(){var _ref;var _temp,_this,_ret;_classCallCheck(this,TopbarLeft);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=TopbarLeft.__proto__||Object.getPrototypeOf(TopbarLeft)).call.apply(_ref,[this].concat(args))),_this),_this.handleDomainClick=function(e,domainObj){var _this$props=_this.props,selectRedditDomain=_this$props.selectRedditDomain,domain=_this$props.domain;var selectedDomain=e.currentTarget.id;if(selectedDomain!==domain.active){selectRedditDomain({active:selectedDomain,obj:domainObj});}if(selectedDomain===domain.active){selectRedditDomain({active:\"\",obj:{}});}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(TopbarLeft,[{key:'render',value:function render(){var _this2=this;var domain=this.props.domain;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'topbar-left'},__WEBPACK_IMPORTED_MODULE_2__utils_posts__[\"e\" /* supportedDomains */].map(function(supportedDomain,i){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{key:i,id:supportedDomain.icon,onClick:function onClick(e){return _this2.handleDomainClick(e,supportedDomain);}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_icon__[\"a\" /* default */],{name:supportedDomain.icon,domain:supportedDomain.name,type:'reddit',className:supportedDomain.icon+' '+(supportedDomain.icon===domain.active?\"active\":\"\")}));}));}}]);return TopbarLeft;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var domain=state.redditPosts.posts.domain;return{domain:domain};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{selectRedditDomain:function selectRedditDomain(domain){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__[\"f\" /* selectRedditDomain */])(domain));}};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(TopbarLeft));\n\n/***/ }),\n\n/***/ 1772:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_posts__ = __webpack_require__(266);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__ = __webpack_require__(264);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_icon__ = __webpack_require__(30);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TopbarRight=function(_Component){_inherits(TopbarRight,_Component);function TopbarRight(){var _ref;var _temp,_this,_ret;_classCallCheck(this,TopbarRight);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=TopbarRight.__proto__||Object.getPrototypeOf(TopbarRight)).call.apply(_ref,[this].concat(args))),_this),_this.handleCategoryClick=function(e){var _this$props=_this.props,updatePosts=_this$props.updatePosts,selectRedditCategory=_this$props.selectRedditCategory,activeCategory=_this$props.activeCategory;var selectedCategory=e.currentTarget.id;if(selectedCategory!==activeCategory){updatePosts(selectedCategory);selectRedditCategory(selectedCategory);}if(selectedCategory===activeCategory){updatePosts(\"hot\");selectRedditCategory(\"hot\");}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(TopbarRight,[{key:'render',value:function render(){var _this2=this;var activeCategory=this.props.activeCategory;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'topbar-right'},__WEBPACK_IMPORTED_MODULE_3__utils_posts__[\"a\" /* categories */].map(function(category,i){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{key:i,onClick:function onClick(e){return _this2.handleCategoryClick(e);},id:category.name},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_icon__[\"a\" /* default */],{name:category.icon,tooltip:true,tooltipPlacement:'bottom',title:__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.startCase(category.name),className:'mage '+(category.name===activeCategory?\"active\":\"\")}));}));}}]);return TopbarRight;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var activeCategory=state.redditPosts.posts.activeCategory;return{activeCategory:activeCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updatePosts:function updatePosts(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__[\"b\" /* fetchRedditPostsRequest */])(payload));},selectRedditCategory:function selectRedditCategory(category){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__[\"e\" /* selectRedditCategory */])(category));}};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(TopbarRight));\n\n/***/ }),\n\n/***/ 1773:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__header_header__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__body_body__ = __webpack_require__(1776);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_styles_css__ = __webpack_require__(1779);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_styles_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__content_styles_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__ = __webpack_require__(246);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Content=function(_Component){_inherits(Content,_Component);function Content(){_classCallCheck(this,Content);return _possibleConstructorReturn(this,(Content.__proto__||Object.getPrototypeOf(Content)).apply(this,arguments));}_createClass(Content,[{key:\"render\",value:function render(){var _props$posts=this.props.posts,all=_props$posts.all,loading=_props$posts.loading;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"content redditPosts\"},this.props.windowWidth>815&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__header_header__[\"a\" /* default */],null),loading&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__[\"a\" /* default */],null),!loading&&all&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__body_body__[\"a\" /* default */],null),!loading&&(!all||all.length===0)&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,\"Couldn't find posts. Try again later.\"));}}]);return Content;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var windowWidth=state.app.windowSize.windowWidth;var posts=state.redditPosts.posts;return{windowWidth:windowWidth,posts:posts};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps)(Content));\n\n/***/ }),\n\n/***/ 1774:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__header_item__ = __webpack_require__(1775);\nvar RedditPostsHeader=function RedditPostsHeader(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"ul\",{className:\"redditPosts__header\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"upvotes\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"title\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"comments\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"created\"}));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsHeader);\n\n/***/ }),\n\n/***/ 1775:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\nvar RedditHeaderItem=function RedditHeaderItem(_ref){var name=_ref.name;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'redditPosts__snippet--'+name,key:name},__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.startCase(name));};RedditHeaderItem.propTypes={name:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired};RedditHeaderItem.defaultProps={name:undefined};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditHeaderItem);\n\n/***/ }),\n\n/***/ 1776:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__ = __webpack_require__(276);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__body_item__ = __webpack_require__(1777);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_posts__ = __webpack_require__(266);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__body_item_mobile__ = __webpack_require__(1778);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RedditPostsBody=function(_Component){_inherits(RedditPostsBody,_Component);function RedditPostsBody(){var _ref;var _temp,_this,_ret;_classCallCheck(this,RedditPostsBody);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=RedditPostsBody.__proto__||Object.getPrototypeOf(RedditPostsBody)).call.apply(_ref,[this].concat(args))),_this),_this.handlePostClick=function(e){var _this$props=_this.props,posts=_this$props.posts,updateActivePost=_this$props.updateActivePost,updatePostComments=_this$props.updatePostComments;var all=posts.all;var postId=e.currentTarget.id;var post=all.find(function(p){return p.id===postId;});if(post){updateActivePost(post);updatePostComments(post.id);}},_this.mapPosts=function(posts){return posts.map(function(post){var id=post.id,title=post.title;var url='/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.kebabCase(title);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{id:id,className:Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"c\" /* checkIfStickied */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"b\" /* checkIfBlizzardPost */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"d\" /* stripDomains */])(post)+' table-row',onClick:_this.handlePostClick},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__body_item__[\"a\" /* default */],{post:post,key:id,url:url,handlePostClick:_this.handlePostClick}));});},_this.mapMobilePosts=function(posts){return posts.map(function(post){var id=post.id,title=post.title;var url='/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.kebabCase(title);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{id:id,className:Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"c\" /* checkIfStickied */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"b\" /* checkIfBlizzardPost */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"d\" /* stripDomains */])(post)+' table-row redditPosts__body--mobile',onClick:_this.handlePostClick},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__body_item_mobile__[\"a\" /* default */],{post:post,key:id,url:url,handlePostClick:_this.handlePostClick}));});},_this.filterPostsByDomain=function(posts){return posts.all.filter(function(post){return typeof posts.domain.obj.name===\"string\"?post.domain===posts.domain.obj.name:posts.domain.obj.name.includes(post.domain);});},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(RedditPostsBody,[{key:'render',value:function render(){var _props=this.props,posts=_props.posts,windowWidth=_props.windowWidth;var domain=posts.domain;var allPosts=!__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.isEmpty(domain.active)?this.filterPostsByDomain(posts):posts.all;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'redditPosts__body'},windowWidth<=815?this.mapMobilePosts(allPosts):this.mapPosts(allPosts));}}]);return RedditPostsBody;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var windowWidth=state.app.windowSize.windowWidth;var posts=state.redditPosts.posts;return{windowWidth:windowWidth,posts:posts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updatePostComments:function updatePostComments(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__[\"b\" /* fetchRedditPostCommentsRequest */])(payload));},updateActivePost:function updateActivePost(payload){return dispatch({type:__WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__[\"h\" /* UPDATE_ACTIVE_POST */],payload:payload});}};};RedditPostsBody.propTypes={};RedditPostsBody.defaultProps={};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(RedditPostsBody));\n\n/***/ }),\n\n/***/ 1777:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_upvotes__ = __webpack_require__(1253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__assets_title__ = __webpack_require__(1254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__assets_comments__ = __webpack_require__(1255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__assets_created__ = __webpack_require__(1256);\nvar RedditPostsBodyItem=function RedditPostsBodyItem(_ref){var post=_ref.post,url=_ref.url;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:url},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__assets_upvotes__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__assets_title__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__assets_comments__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__assets_created__[\"a\" /* default */],{post:post}));};RedditPostsBodyItem.propTypes={post:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsBodyItem);\n\n/***/ }),\n\n/***/ 1778:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__assets_upvotes__ = __webpack_require__(1253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__assets_title__ = __webpack_require__(1254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__assets_comments__ = __webpack_require__(1255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__assets_created__ = __webpack_require__(1256);\nvar RedditPostsBodyItemMobile=function RedditPostsBodyItemMobile(_ref){var post=_ref.post;var id=post.id,title=post.title,selftext=post.selftext;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:'/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.kebabCase(title)},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--header'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__assets_title__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__assets_created__[\"a\" /* default */],{post:post})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--body'},selftext),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--footer'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__assets_comments__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__assets_upvotes__[\"a\" /* default */],{post:post})));};RedditPostsBodyItemMobile.propTypes={post:__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsBodyItemMobile);\n\n/***/ }),\n\n/***/ 1779:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1780);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(682)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 1780:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(681)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".redditPosts{margin:1vh 1vh 0;display:grid;grid-template-rows:4.5vh 71vh;grid-row-gap:1vh}.redditPosts__header{background:#474143;color:#e7e2da;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding-right:calc(1vh + 14px);text-align:center;padding-left:5px}.redditPosts__body{height:100%;overflow:auto;padding-right:1vh}.redditPosts__body::-webkit-scrollbar{width:13px;height:13px}.redditPosts__body::-webkit-scrollbar-thumb{background-color:#474143;border-radius:0;border-left:1px solid transparent}.redditPosts__body::-webkit-scrollbar-thumb:hover{background-color:#474143}.redditPosts__body::-webkit-scrollbar-track{background-color:#a69e9d;border-left:1px solid transparent}.redditPosts__body li{border-left:1px solid #474143!important;border-right:1px solid #474143!important;border-bottom:1px solid #474143!important}.redditPosts__body li:first-child{border-top:1px solid #474143!important}.redditPosts__body li a{display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:5px}.redditPosts__body .redditPosts__body--mobile{border:1px solid #a69e9d!important;margin-bottom:10px;-webkit-box-shadow:0 0 5px rgba(0,0,0,.5);box-shadow:0 0 5px rgba(0,0,0,.5)}.redditPosts__body .redditPosts__body--mobile:first-child{border-top:1px solid #a69e9d!important}.redditPosts__body .redditPosts__body--mobile:last-child{margin-bottom:0}.redditPosts__body .redditPosts__body--mobile a{-ms-flex-direction:column;flex-direction:column;position:relative}.redditPosts__body .redditPosts__body--mobile a>div{width:100%}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header{display:-ms-flexbox;display:flex;font-size:medium;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title{width:auto}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title>span{position:absolute;right:1vh;font-size:calc(3em + 1vmin);top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);opacity:.1}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created{width:auto;font-size:calc(.5em + 1vmin);text-align:left;opacity:.5}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body{margin:1vh 0;width:100%;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span{font-size:calc(.8em + 1vmin)!important}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p{font-size:calc(.6em + 1vmin)!important}.redditPosts__snippet--comments,.redditPosts__snippet--upvotes{width:10%}.redditPosts__snippet--created{width:20%;text-align:center;font-size:calc(.3em + 1vmin)}.redditPosts__snippet--title{width:60%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--title>span{margin-right:10px}.redditPosts__snippet--title .author{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;font-size:calc(.5em + .5vmin);opacity:.5}.redditPosts__snippet--title .author>span{color:#ff4006;margin-left:5px}.redditPosts__snippet--hasIcon,.redditPosts__snippet--title .author>span{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--hasIcon{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.redditPosts__snippet--hasIcon span{font-size:calc(.5em + 1vmin)!important;margin-bottom:3px}.redditPosts__snippet--hasIcon p{font-size:calc(.3em + 1vmin);opacity:.5}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/TERMINATOR/WebstormProjects/cfc-react/src/containers/pages/reddit/posts/content/content-styles.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,iBAAsB,AACtB,aAAc,AACd,8BAA+B,AAC/B,gBAAkB,CAAE,AACpB,qBACE,mBAAoB,AACpB,cAAe,AACf,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,+BAAgC,AAChC,kBAAmB,AACnB,gBAAkB,CAAE,AACtB,mBACE,YAAa,AACb,cAAe,AACf,iBAAmB,CAAE,AACrB,sCACE,WAAY,AACZ,WAAa,CAAE,AACjB,4CACE,yBAA0B,AAC1B,gBAAiB,AACjB,iCAAmC,CAAE,AACvC,kDACE,wBAA0B,CAAE,AAC9B,4CACE,yBAA0B,AAC1B,iCAAmC,CAAE,AACvC,sBACE,wCAA0C,AAC1C,yCAA2C,AAC3C,yCAA4C,CAAE,AAC9C,kCACE,sCAAyC,CAAE,AAC7C,wBACE,oBAAqB,AACrB,aAAc,AACd,WAAY,AACZ,YAAa,AACb,qBAAsB,AAClB,uBAAwB,AAC5B,sBAAuB,AACnB,mBAAoB,AACxB,WAAa,CAAE,AACnB,8CACE,mCAAqC,AACrC,mBAAoB,AACpB,0CAA+C,AAC/C,iCAAuC,CAAE,AACzC,0DACE,sCAAyC,CAAE,AAC7C,yDACE,eAAiB,CAAE,AACrB,gDACE,0BAA2B,AACvB,sBAAuB,AAC3B,iBAAmB,CAAE,AACrB,oDACE,UAAY,CAAE,AAChB,8EACE,oBAAqB,AACrB,aAAc,AACd,iBAAmB,AACnB,kCAAmC,AAC/B,6BAA+B,CAAE,AACrC,2GACE,UAAe,CAAE,AACjB,gHACE,kBAAmB,AACnB,UAAW,AACX,4BAA6B,AAC7B,QAAS,AACT,mCAAoC,AAChC,+BAAgC,AAC5B,2BAA4B,AACpC,UAAY,CAAE,AAClB,6GACE,WAAe,AACf,6BAA8B,AAC9B,gBAAiB,AACjB,UAAY,CAAE,AAClB,4EACE,aAAc,AACd,WAAY,AACZ,mBAAoB,AACpB,gBAAiB,AACjB,0BAA2B,AACxB,sBAAwB,CAAE,AAC/B,8EACE,oBAAqB,AACrB,aAAc,AACd,2BAA4B,AACxB,6BAA8B,AAClC,+BAAgC,AAC5B,0BAA4B,CAAE,AAClC,mFACE,sCAAyC,CAAE,AAC7C,gFACE,sCAAyC,CAAE,AACrD,+DACE,SAAW,CAAE,AACf,+BACE,UAAW,AACX,kBAAmB,AACnB,4BAA8B,CAAE,AAClC,6BACE,UAAW,AACX,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,kCACE,iBAAmB,CAAE,AACvB,qCACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,8BAA+B,AAC/B,UAAY,CAAE,AACd,0CAKE,cAAe,AACf,eAAiB,CAAE,AACzB,yEANM,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAWF,AAR5B,+BAGE,0BAA2B,AACvB,sBAAuB,AAC3B,qBAAsB,AAClB,sBAAwB,CAEF,AAC1B,oCACE,uCAAyC,AACzC,iBAAmB,CAAE,AACvB,iCACE,6BAA8B,AAC9B,UAAY,CAAE\",\"file\":\"content-styles.css\",\"sourcesContent\":[\".redditPosts {\\r\\n  margin: 1vh 1vh 0 1vh;\\r\\n  display: grid;\\r\\n  grid-template-rows: 4.5vh 71vh;\\r\\n  grid-row-gap: 1vh; }\\r\\n  .redditPosts__header {\\r\\n    background: #474143;\\r\\n    color: #E7E2DA;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center;\\r\\n    padding-right: calc(1vh + 14px);\\r\\n    text-align: center;\\r\\n    padding-left: 5px; }\\r\\n  .redditPosts__body {\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    padding-right: 1vh; }\\r\\n    .redditPosts__body::-webkit-scrollbar {\\r\\n      width: 13px;\\r\\n      height: 13px; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb {\\r\\n      background-color: #474143;\\r\\n      border-radius: 0;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb:hover {\\r\\n      background-color: #474143; }\\r\\n    .redditPosts__body::-webkit-scrollbar-track {\\r\\n      background-color: #A69E9D;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body li {\\r\\n      border-left: 1px solid #474143 !important;\\r\\n      border-right: 1px solid #474143 !important;\\r\\n      border-bottom: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li:first-child {\\r\\n        border-top: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li a {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        padding: 5px; }\\r\\n    .redditPosts__body .redditPosts__body--mobile {\\r\\n      border: 1px solid #A69E9D !important;\\r\\n      margin-bottom: 10px;\\r\\n      -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\r\\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5); }\\r\\n      .redditPosts__body .redditPosts__body--mobile:first-child {\\r\\n        border-top: 1px solid #A69E9D !important; }\\r\\n      .redditPosts__body .redditPosts__body--mobile:last-child {\\r\\n        margin-bottom: 0; }\\r\\n      .redditPosts__body .redditPosts__body--mobile a {\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n        position: relative; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a > div {\\r\\n          width: 100%; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          font-size: initial;\\r\\n          -ms-flex-direction: column-reverse;\\r\\n              flex-direction: column-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title {\\r\\n            width: initial; }\\r\\n            .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title > span {\\r\\n              position: absolute;\\r\\n              right: 1vh;\\r\\n              font-size: calc(3em + 1vmin);\\r\\n              top: 50%;\\r\\n              -webkit-transform: translateY(-50%);\\r\\n                  -ms-transform: translateY(-50%);\\r\\n                      transform: translateY(-50%);\\r\\n              opacity: .1; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created {\\r\\n            width: initial;\\r\\n            font-size: calc(.5em + 1vmin);\\r\\n            text-align: left;\\r\\n            opacity: .5; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body {\\r\\n          margin: 1vh 0;\\r\\n          width: 100%;\\r\\n          white-space: nowrap;\\r\\n          overflow: hidden;\\r\\n          -o-text-overflow: ellipsis;\\r\\n             text-overflow: ellipsis; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          -ms-flex-pack: space-evenly;\\r\\n              justify-content: space-evenly;\\r\\n          -ms-flex-direction: row-reverse;\\r\\n              flex-direction: row-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span {\\r\\n            font-size: calc(.8em + 1vmin) !important; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p {\\r\\n            font-size: calc(.6em + 1vmin) !important; }\\r\\n  .redditPosts__snippet--upvotes, .redditPosts__snippet--comments {\\r\\n    width: 10%; }\\r\\n  .redditPosts__snippet--created {\\r\\n    width: 20%;\\r\\n    text-align: center;\\r\\n    font-size: calc(.3em + 1vmin); }\\r\\n  .redditPosts__snippet--title {\\r\\n    width: 60%;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--title > span {\\r\\n      margin-right: 10px; }\\r\\n    .redditPosts__snippet--title .author {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n      font-size: calc(.5em + .5vmin);\\r\\n      opacity: .5; }\\r\\n      .redditPosts__snippet--title .author > span {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        color: #ff4006;\\r\\n        margin-left: 5px; }\\r\\n  .redditPosts__snippet--hasIcon {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n    -ms-flex-pack: center;\\r\\n        justify-content: center;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--hasIcon span {\\r\\n      font-size: calc(.5em + 1vmin) !important;\\r\\n      margin-bottom: 3px; }\\r\\n    .redditPosts__snippet--hasIcon p {\\r\\n      font-size: calc(.3em + 1vmin);\\r\\n      opacity: .5; }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1781:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1782);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(682)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 1782:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(681)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".subreddit__posts{grid-template-columns:100%}.subreddit__posts .container__page--inner .topbar{-ms-flex-pack:inherit;justify-content:inherit;background:#a69e9d}.subreddit__posts .container__page--inner .topbar li{margin:0 10px}.subreddit__posts .container__page--inner .topbar li a span{cursor:pointer;font-size:1vw;padding:5px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul{display:-ms-flexbox;display:flex;margin-top:2px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li{margin-left:15px;color:#474143}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span{font-size:25px;padding:5px;text-transform:capitalize}@media only screen and (max-width:815px){.subreddit__posts .container__page--inner .topbar li{margin:0 5px}.subreddit__posts .redditPosts{grid-template-rows:100%;margin:0}.subreddit__posts .redditPosts .redditPosts__body{padding:1vh;overflow:-moz-scrollbars-none;-ms-overflow-style:none}.subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar{display:none}}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/TERMINATOR/WebstormProjects/cfc-react/src/containers/pages/reddit/styles/reddit-styles.css\"],\"names\":[],\"mappings\":\"AAAA,kBACE,0BAA4B,CAAE,AAC9B,kDACE,sBAAuB,AACnB,wBAAyB,AAC7B,kBAAoB,CAAE,AACtB,qDACE,aAAe,CAAE,AACjB,4DACE,eAAgB,AAChB,cAAe,AACf,WAAa,CAAE,AACnB,0EACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,6EACE,oBAAqB,AACrB,aAAc,AACd,cAAgB,CAAE,AAClB,gFACE,iBAAkB,AAClB,aAAe,CAAE,AACjB,uFACE,eAAgB,AAChB,YAAa,AACb,yBAA2B,CAAE,AAKzC,yCACE,qDACE,YAAc,CAAE,AAClB,+BACE,wBAAyB,AACzB,QAAU,CAAE,AACZ,kDACE,YAAa,AACb,8BAA+B,AAC/B,uBAAyB,CAAE,AAC3B,qEACE,YAAc,CAAE,CAAE\",\"file\":\"reddit-styles.css\",\"sourcesContent\":[\".subreddit__posts {\\r\\n  grid-template-columns: 100%; }\\r\\n  .subreddit__posts .container__page--inner .topbar {\\r\\n    -ms-flex-pack: inherit;\\r\\n        justify-content: inherit;\\r\\n    background: #A69E9D; }\\r\\n    .subreddit__posts .container__page--inner .topbar li {\\r\\n      margin: 0 10px; }\\r\\n      .subreddit__posts .container__page--inner .topbar li a span {\\r\\n        cursor: pointer;\\r\\n        font-size: 1vw;\\r\\n        padding: 5px; }\\r\\n    .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center; }\\r\\n      .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        margin-top: 2px; }\\r\\n        .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li {\\r\\n          margin-left: 15px;\\r\\n          color: #474143; }\\r\\n          .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span {\\r\\n            font-size: 25px;\\r\\n            padding: 5px;\\r\\n            text-transform: capitalize; }\\r\\n\\r\\n/*\\r\\n * Desktop\\r\\n */\\r\\n@media only screen and (max-width: 815px) {\\r\\n  .subreddit__posts .container__page--inner .topbar li {\\r\\n    margin: 0 5px; }\\r\\n  .subreddit__posts .redditPosts {\\r\\n    grid-template-rows: 100%;\\r\\n    margin: 0; }\\r\\n    .subreddit__posts .redditPosts .redditPosts__body {\\r\\n      padding: 1vh;\\r\\n      overflow: -moz-scrollbars-none;\\r\\n      -ms-overflow-style: none; }\\r\\n      .subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar {\\r\\n        display: none; } }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 693:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__topbar_topbar__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_content__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__ = __webpack_require__(264);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__ = __webpack_require__(1781);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RedditPosts=function(_Component){_inherits(RedditPosts,_Component);function RedditPosts(){_classCallCheck(this,RedditPosts);return _possibleConstructorReturn(this,(RedditPosts.__proto__||Object.getPrototypeOf(RedditPosts)).apply(this,arguments));}_createClass(RedditPosts,[{key:'componentDidMount',value:function componentDidMount(){var _props=this.props,posts=_props.posts,fetchRedditPostsRequest=_props.fetchRedditPostsRequest;var activeCategory=posts.activeCategory;document.title='r/hearthstone - '+__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.startCase(activeCategory);if(!posts.all){fetchRedditPostsRequest(\"hot\");}}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.props.resetRedditState();}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'container__page container__page--oneSided subreddit subreddit__posts'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'container__page--inner'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__topbar_topbar__[\"a\" /* default */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__content_content__[\"a\" /* default */],null)));}}]);return RedditPosts;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var _state$redditPosts=state.redditPosts,posts=_state$redditPosts.posts,activeCategory=_state$redditPosts.activeCategory;return{posts:posts,activeCategory:activeCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchRedditPostsRequest:function fetchRedditPostsRequest(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__[\"b\" /* fetchRedditPostsRequest */])(payload));},resetRedditState:function resetRedditState(){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__[\"d\" /* resetRedditState */])());}};};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(RedditPosts));\n\n/***/ }),\n\n/***/ 765:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export notEdited */\n/* unused harmony export editedWrapper */\n/* unused harmony export toSeconds */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return wrapDate; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip__ = __webpack_require__(245);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now__ = __webpack_require__(251);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_date_fns_format__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_date_fns_format___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_date_fns_format__);\n/**\r\n * Writes date when created (https://date-fns.org/docs/format#examples)\r\n * @param created\r\n * @param createdFormatted\r\n * @param placement\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {XML}\r\n */var notEdited=function notEdited(created,createdFormatted,placement,tooltip){return tooltip?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip___default.a,{title:'created '+createdFormatted,placement:placement},created):created;};/**\r\n * Adds '*' symbol to date when post was edited\r\n *\r\n * @param {number} created - The time of creation in UTC epoch-second format. (passing created_utc if it's from reddit json)\r\n * @param {number} createdFormatted - Formatted date into `DD-MM-YYYY HH:mm`\r\n * @param {special} edited - False if not edited, edit date in UTC epoch-seconds otherwise\r\n * @param {number} editedFormatted - Formatted date into `DD-MM-YYYY HH:mm`\r\n * @param {string} placement - Position of the tooltip (https://ant.design/components/tooltip/#Common-API)\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {XML}\r\n */var editedWrapper=function editedWrapper(created,createdFormatted,edited,editedFormatted,placement,tooltip){return tooltip?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip___default.a,{title:'created '+createdFormatted,placement:placement},created),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd_lib_tooltip___default.a,{title:'last edited '+editedFormatted,placement:placement},' *')):created;};/**\r\n * Converts time from miliseconds to seconds\r\n *\r\n * @param {number} time - date in unix format\r\n * @returns {number}\r\n */var toSeconds=function toSeconds(time){return time*1000;};/**\r\n * Wraps element into ant-design Tooltip to give more detailed date on hover.\r\n * @example Without any action: 42 minutes ago\r\n *          On hover: 01/07/2017 13:37\r\n *\r\n * @param {number} created - The time of creation in UTC epoch-second format. (passing created_utc if it's from reddit json)\r\n * @param {special} edited - False if not edited, edit date in UTC epoch-seconds otherwise\r\n * @param {string} placement - Position of the tooltip (https://ant.design/components/tooltip/#Common-API)\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {String}\r\n */var wrapDate=function wrapDate(created){var edited=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var placement=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"bottom\";var tooltip=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var options={includeSeconds:true,addSuffix:true};var dateFormat='DD-MM-YYYY HH:mm';var createdFormatted=__WEBPACK_IMPORTED_MODULE_3_date_fns_format___default()(toSeconds(created),dateFormat);var timeDifference=__WEBPACK_IMPORTED_MODULE_2_date_fns_distance_in_words_to_now___default()(toSeconds(created),options);var editedTimeFormatted=__WEBPACK_IMPORTED_MODULE_3_date_fns_format___default()(toSeconds(edited),dateFormat);return edited===false?notEdited(timeDifference,createdFormatted,placement,tooltip):editedWrapper(timeDifference,createdFormatted,toSeconds(edited),editedTimeFormatted,placement,tooltip);};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/13.15df8afd.chunk.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\n\r\nconst RedditPostUpvotes = ({post}) => {\r\n  const {ups} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--upvotes redditPosts__snippet--hasIcon\">\r\n      <Icon name=\"circle-up\" />\r\n      <p>{ups}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostUpvotes;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/upvotes.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\nimport _ from \"lodash\";\r\n\r\nconst RedditPostTitle = ({post}) => {\r\n  const {title, domain, link_flair_text, author} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--title\">\r\n      <Icon name={domain} type=\"reddit\" domain={domain} linkFlairText={link_flair_text}/>\r\n      <div className=\"name-details\">\r\n        <p className=\"title\">{_.unescape(title)}</p>\r\n        <p className=\"author\">posted by <span><Icon name=\"reddit\"/>{author}</span></p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostTitle;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/title.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\n\r\nconst RedditPostComments = ({post}) => {\r\n  const {num_comments} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--comments redditPosts__snippet--hasIcon\">\r\n      <Icon name=\"bubbles2\" />\r\n      <p>{num_comments}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostComments;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/comments.js","import React from 'react';\r\nimport {wrapDate} from \"../../../../../../../utils/wrap-date\";\r\n\r\nconst RedditPostCreated = ({post}) => {\r\n  const {created_utc, edited} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--created\">\r\n      {wrapDate(created_utc, edited)}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostCreated;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/created.js","import React from 'react';\r\nimport TopbarLeft from './topbar-left';\r\nimport TopbarRight from './topbar-right';\r\n\r\nconst Topbar = () => (\r\n  <div className=\"topbar\">\r\n    <TopbarLeft />\r\n    <TopbarRight />\r\n  </div>\r\n);\r\n\r\nexport default Topbar;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar.js","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {supportedDomains} from \"../../utils/posts\";\r\nimport {selectRedditDomain} from \"../../../../../redux/reddit/posts/actions\";\r\nimport Icon from \"../../../../../components/icon\";\r\n\r\nclass TopbarLeft extends Component {\r\n  handleDomainClick = (e, domainObj) => {\r\n    const {selectRedditDomain, domain} = this.props;\r\n    const selectedDomain = e.currentTarget.id;\r\n\r\n    if (selectedDomain !== domain.active) {\r\n      selectRedditDomain({active: selectedDomain, obj: domainObj});\r\n    }\r\n\r\n    if(selectedDomain === domain.active) {\r\n      selectRedditDomain({active: \"\", obj: {}});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {domain} = this.props;\r\n\r\n    return (\r\n      <ul className=\"topbar-left\">\r\n        {supportedDomains.map((supportedDomain, i) =>\r\n          <li key={i} id={supportedDomain.icon} onClick={(e) => this.handleDomainClick(e, supportedDomain)}>\r\n            <Icon name={supportedDomain.icon}\r\n                  domain={supportedDomain.name}\r\n                  type=\"reddit\"\r\n                  className={`${supportedDomain.icon} ${supportedDomain.icon === domain.active ? \"active\" : \"\"}`}/>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { domain } = state.redditPosts.posts;\r\n  return { domain };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectRedditDomain: domain => dispatch(selectRedditDomain(domain)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopbarLeft);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar-left.js","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport { connect } from 'react-redux';\r\nimport {categories} from \"../../utils/posts\";\r\nimport {fetchRedditPostsRequest, selectRedditCategory} from \"../../../../../redux/reddit/posts/actions\";\r\nimport Icon from \"../../../../../components/icon\";\r\n\r\nclass TopbarRight extends Component {\r\n  handleCategoryClick = (e) => {\r\n    const {updatePosts, selectRedditCategory, activeCategory} = this.props;\r\n    const selectedCategory = e.currentTarget.id;\r\n\r\n    if (selectedCategory !== activeCategory) {\r\n      updatePosts(selectedCategory);\r\n      selectRedditCategory(selectedCategory);\r\n    }\r\n\r\n    if(selectedCategory === activeCategory){\r\n      updatePosts(\"hot\");\r\n      selectRedditCategory(\"hot\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {activeCategory} = this.props;\r\n\r\n    return (\r\n      <ul className=\"topbar-right\">\r\n        {categories.map((category, i) =>\r\n          <li key={i}\r\n              onClick={e => this.handleCategoryClick(e)}\r\n              id={category.name}>\r\n            <Icon name={category.icon}\r\n                  tooltip={true}\r\n                  tooltipPlacement=\"bottom\"\r\n                  title={_.startCase(category.name)}\r\n                  className={`mage ${category.name === activeCategory ? \"active\" : \"\"}`}/>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { activeCategory } = state.redditPosts.posts;\r\n  return { activeCategory };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updatePosts: (payload) => dispatch(fetchRedditPostsRequest(payload)),\r\n    selectRedditCategory: category => dispatch(selectRedditCategory(category)),\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopbarRight);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar-right.js","import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport RedditPostsHeader from \"./header/header\";\r\nimport RedditPostsBody from \"./body/body\";\r\nimport './content-styles.css';\r\nimport Loader from \"../../../../../components/loaders/diamond/loader\";\r\n\r\nclass Content extends Component {\r\n  render(){\r\n    const {all, loading} = this.props.posts;\r\n    return (\r\n      <div className=\"content redditPosts\">\r\n        {this.props.windowWidth > 815 && <RedditPostsHeader />}\r\n        {loading && <Loader/>}\r\n\r\n        {!loading && all && <RedditPostsBody />}\r\n\r\n        {!loading && (!all || all.length === 0) && (\r\n          <div>Couldn't find posts. Try again later.</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {windowWidth} = state.app.windowSize;\r\n  const { posts } = state.redditPosts;\r\n  return { windowWidth, posts };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Content);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/content.js","import React from 'react';\r\nimport RedditHeaderItem from \"./header-item\";\r\n\r\nconst RedditPostsHeader = () => (\r\n  <ul className=\"redditPosts__header\">\r\n    <RedditHeaderItem name=\"upvotes\"/>\r\n    <RedditHeaderItem name=\"title\"/>\r\n    <RedditHeaderItem name=\"comments\"/>\r\n    <RedditHeaderItem name=\"created\"/>\r\n  </ul>\r\n);\r\n\r\nexport default RedditPostsHeader;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/header/header.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst RedditHeaderItem = ({name}) => (\r\n  <li className={`redditPosts__snippet--${name}`} key={name}>{_.startCase(name)}</li>\r\n);\r\n\r\nRedditHeaderItem.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nRedditHeaderItem.defaultProps = {\r\n  name: undefined\r\n};\r\n\r\nexport default RedditHeaderItem;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/header/header-item.js","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport { connect } from 'react-redux';\r\nimport {fetchRedditPostCommentsRequest} from \"../../../../../../redux/reddit/comments/actions\";\r\nimport {UPDATE_ACTIVE_POST} from \"../../../../../../redux/reddit/active-post/types\";\r\nimport RedditPostsBodyItem from \"./body-item\";\r\nimport {checkIfBlizzardPost, checkIfStickied, stripDomains} from \"../../../utils/posts\";\r\nimport RedditPostsBodyItemMobile from \"./body-item-mobile\";\r\n\r\nclass RedditPostsBody extends Component {\r\n  handlePostClick = (e) => {\r\n    const {posts, updateActivePost, updatePostComments} = this.props;\r\n    const {all} = posts;\r\n    const postId = e.currentTarget.id;\r\n    const post = all.find(p => p.id === postId);\r\n\r\n    if(post) {\r\n      updateActivePost(post);\r\n      updatePostComments(post.id);\r\n    }\r\n  };\r\n\r\n  mapPosts = (posts) => posts.map(post => {\r\n    const {id, title} = post;\r\n    const url = `/reddit/post/${id}/${_.kebabCase(title)}`;\r\n\r\n    return (\r\n      <li id={id}\r\n          className={`${checkIfStickied(post)} ${checkIfBlizzardPost(post)} ${stripDomains(post)} table-row`}\r\n          onClick={this.handlePostClick}>\r\n        <RedditPostsBodyItem post={post}\r\n                             key={id}\r\n                             url={url}\r\n                             handlePostClick={this.handlePostClick}/>\r\n      </li>\r\n    )\r\n  });\r\n\r\n  mapMobilePosts = (posts) => posts.map(post => {\r\n    const {id, title} = post;\r\n    const url = `/reddit/post/${id}/${_.kebabCase(title)}`;\r\n\r\n    return (\r\n      <li id={id}\r\n          className={`${checkIfStickied(post)} ${checkIfBlizzardPost(post)} ${stripDomains(post)} table-row redditPosts__body--mobile`}\r\n          onClick={this.handlePostClick}>\r\n        <RedditPostsBodyItemMobile post={post}\r\n                                   key={id}\r\n                                   url={url}\r\n                                   handlePostClick={this.handlePostClick}/>\r\n      </li>\r\n    )\r\n  });\r\n\r\n  filterPostsByDomain = (posts) => {\r\n    return posts.all.filter(post => (\r\n      typeof posts.domain.obj.name === \"string\"\r\n        ? post.domain === posts.domain.obj.name\r\n        : posts.domain.obj.name.includes(post.domain)\r\n    ))\r\n  };\r\n\r\n  render() {\r\n    const {posts, windowWidth} = this.props;\r\n    const {domain} = posts;\r\n    const allPosts = !_.isEmpty(domain.active) ? this.filterPostsByDomain(posts) : posts.all;\r\n\r\n    return (\r\n      <ul className=\"redditPosts__body\">\r\n        {windowWidth <= 815\r\n          ? this.mapMobilePosts(allPosts)\r\n          : this.mapPosts(allPosts)\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {windowWidth} = state.app.windowSize;\r\n  const { posts } = state.redditPosts;\r\n  return {windowWidth, posts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updatePostComments: payload => dispatch(fetchRedditPostCommentsRequest(payload)),\r\n    updateActivePost: payload => dispatch({\r\n      type: UPDATE_ACTIVE_POST, payload\r\n    }),\r\n  }\r\n};\r\n\r\nRedditPostsBody.propTypes = {};\r\nRedditPostsBody.defaultProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedditPostsBody);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body.js","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport RedditPostUpvotes from './assets/upvotes';\r\nimport RedditPostTitle from './assets/title';\r\nimport RedditPostComments from \"./assets/comments\";\r\nimport RedditPostCreated from \"./assets/created\";\r\n\r\nconst RedditPostsBodyItem = ({post, url}) => {\r\n\r\n  return (\r\n    <Link to={url}>\r\n      <RedditPostUpvotes post={post}/>\r\n      <RedditPostTitle post={post}/>\r\n      <RedditPostComments post={post}/>\r\n      <RedditPostCreated post={post}/>\r\n    </Link>\r\n  )\r\n};\r\n\r\nRedditPostsBodyItem.propTypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\nexport default RedditPostsBodyItem;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body-item.js","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport RedditPostUpvotes from './assets/upvotes';\r\nimport RedditPostTitle from './assets/title';\r\nimport RedditPostComments from \"./assets/comments\";\r\nimport RedditPostCreated from \"./assets/created\";\r\n\r\nconst RedditPostsBodyItemMobile = ({post}) => {\r\n  const {id, title, selftext} = post;\r\n\r\n  return (\r\n    <Link to={`/reddit/post/${id}/${_.kebabCase(title)}`}>\r\n      <div className=\"redditPosts__snippet--header\">\r\n        <RedditPostTitle post={post}/>\r\n        <RedditPostCreated post={post}/>\r\n      </div>\r\n      <div className=\"redditPosts__snippet--body\">\r\n        {selftext}\r\n      </div>\r\n      <div className=\"redditPosts__snippet--footer\">\r\n        <RedditPostComments post={post}/>\r\n        <RedditPostUpvotes post={post}/>\r\n      </div>\r\n    </Link>\r\n  )\r\n};\r\n\r\nRedditPostsBodyItemMobile.propTypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\nexport default RedditPostsBodyItemMobile;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body-item-mobile.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/pages/reddit/posts/content/content-styles.css\n// module id = 1779\n// module chunks = 13","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".redditPosts{margin:1vh 1vh 0;display:grid;grid-template-rows:4.5vh 71vh;grid-row-gap:1vh}.redditPosts__header{background:#474143;color:#e7e2da;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding-right:calc(1vh + 14px);text-align:center;padding-left:5px}.redditPosts__body{height:100%;overflow:auto;padding-right:1vh}.redditPosts__body::-webkit-scrollbar{width:13px;height:13px}.redditPosts__body::-webkit-scrollbar-thumb{background-color:#474143;border-radius:0;border-left:1px solid transparent}.redditPosts__body::-webkit-scrollbar-thumb:hover{background-color:#474143}.redditPosts__body::-webkit-scrollbar-track{background-color:#a69e9d;border-left:1px solid transparent}.redditPosts__body li{border-left:1px solid #474143!important;border-right:1px solid #474143!important;border-bottom:1px solid #474143!important}.redditPosts__body li:first-child{border-top:1px solid #474143!important}.redditPosts__body li a{display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:5px}.redditPosts__body .redditPosts__body--mobile{border:1px solid #a69e9d!important;margin-bottom:10px;-webkit-box-shadow:0 0 5px rgba(0,0,0,.5);box-shadow:0 0 5px rgba(0,0,0,.5)}.redditPosts__body .redditPosts__body--mobile:first-child{border-top:1px solid #a69e9d!important}.redditPosts__body .redditPosts__body--mobile:last-child{margin-bottom:0}.redditPosts__body .redditPosts__body--mobile a{-ms-flex-direction:column;flex-direction:column;position:relative}.redditPosts__body .redditPosts__body--mobile a>div{width:100%}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header{display:-ms-flexbox;display:flex;font-size:medium;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title{width:auto}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title>span{position:absolute;right:1vh;font-size:calc(3em + 1vmin);top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);opacity:.1}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created{width:auto;font-size:calc(.5em + 1vmin);text-align:left;opacity:.5}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body{margin:1vh 0;width:100%;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span{font-size:calc(.8em + 1vmin)!important}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p{font-size:calc(.6em + 1vmin)!important}.redditPosts__snippet--comments,.redditPosts__snippet--upvotes{width:10%}.redditPosts__snippet--created{width:20%;text-align:center;font-size:calc(.3em + 1vmin)}.redditPosts__snippet--title{width:60%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--title>span{margin-right:10px}.redditPosts__snippet--title .author{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;font-size:calc(.5em + .5vmin);opacity:.5}.redditPosts__snippet--title .author>span{color:#ff4006;margin-left:5px}.redditPosts__snippet--hasIcon,.redditPosts__snippet--title .author>span{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--hasIcon{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.redditPosts__snippet--hasIcon span{font-size:calc(.5em + 1vmin)!important;margin-bottom:3px}.redditPosts__snippet--hasIcon p{font-size:calc(.3em + 1vmin);opacity:.5}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/TERMINATOR/WebstormProjects/cfc-react/src/containers/pages/reddit/posts/content/content-styles.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,iBAAsB,AACtB,aAAc,AACd,8BAA+B,AAC/B,gBAAkB,CAAE,AACpB,qBACE,mBAAoB,AACpB,cAAe,AACf,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,+BAAgC,AAChC,kBAAmB,AACnB,gBAAkB,CAAE,AACtB,mBACE,YAAa,AACb,cAAe,AACf,iBAAmB,CAAE,AACrB,sCACE,WAAY,AACZ,WAAa,CAAE,AACjB,4CACE,yBAA0B,AAC1B,gBAAiB,AACjB,iCAAmC,CAAE,AACvC,kDACE,wBAA0B,CAAE,AAC9B,4CACE,yBAA0B,AAC1B,iCAAmC,CAAE,AACvC,sBACE,wCAA0C,AAC1C,yCAA2C,AAC3C,yCAA4C,CAAE,AAC9C,kCACE,sCAAyC,CAAE,AAC7C,wBACE,oBAAqB,AACrB,aAAc,AACd,WAAY,AACZ,YAAa,AACb,qBAAsB,AAClB,uBAAwB,AAC5B,sBAAuB,AACnB,mBAAoB,AACxB,WAAa,CAAE,AACnB,8CACE,mCAAqC,AACrC,mBAAoB,AACpB,0CAA+C,AAC/C,iCAAuC,CAAE,AACzC,0DACE,sCAAyC,CAAE,AAC7C,yDACE,eAAiB,CAAE,AACrB,gDACE,0BAA2B,AACvB,sBAAuB,AAC3B,iBAAmB,CAAE,AACrB,oDACE,UAAY,CAAE,AAChB,8EACE,oBAAqB,AACrB,aAAc,AACd,iBAAmB,AACnB,kCAAmC,AAC/B,6BAA+B,CAAE,AACrC,2GACE,UAAe,CAAE,AACjB,gHACE,kBAAmB,AACnB,UAAW,AACX,4BAA6B,AAC7B,QAAS,AACT,mCAAoC,AAChC,+BAAgC,AAC5B,2BAA4B,AACpC,UAAY,CAAE,AAClB,6GACE,WAAe,AACf,6BAA8B,AAC9B,gBAAiB,AACjB,UAAY,CAAE,AAClB,4EACE,aAAc,AACd,WAAY,AACZ,mBAAoB,AACpB,gBAAiB,AACjB,0BAA2B,AACxB,sBAAwB,CAAE,AAC/B,8EACE,oBAAqB,AACrB,aAAc,AACd,2BAA4B,AACxB,6BAA8B,AAClC,+BAAgC,AAC5B,0BAA4B,CAAE,AAClC,mFACE,sCAAyC,CAAE,AAC7C,gFACE,sCAAyC,CAAE,AACrD,+DACE,SAAW,CAAE,AACf,+BACE,UAAW,AACX,kBAAmB,AACnB,4BAA8B,CAAE,AAClC,6BACE,UAAW,AACX,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,kCACE,iBAAmB,CAAE,AACvB,qCACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,8BAA+B,AAC/B,UAAY,CAAE,AACd,0CAKE,cAAe,AACf,eAAiB,CAAE,AACzB,yEANM,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAWF,AAR5B,+BAGE,0BAA2B,AACvB,sBAAuB,AAC3B,qBAAsB,AAClB,sBAAwB,CAEF,AAC1B,oCACE,uCAAyC,AACzC,iBAAmB,CAAE,AACvB,iCACE,6BAA8B,AAC9B,UAAY,CAAE\",\"file\":\"content-styles.css\",\"sourcesContent\":[\".redditPosts {\\r\\n  margin: 1vh 1vh 0 1vh;\\r\\n  display: grid;\\r\\n  grid-template-rows: 4.5vh 71vh;\\r\\n  grid-row-gap: 1vh; }\\r\\n  .redditPosts__header {\\r\\n    background: #474143;\\r\\n    color: #E7E2DA;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center;\\r\\n    padding-right: calc(1vh + 14px);\\r\\n    text-align: center;\\r\\n    padding-left: 5px; }\\r\\n  .redditPosts__body {\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    padding-right: 1vh; }\\r\\n    .redditPosts__body::-webkit-scrollbar {\\r\\n      width: 13px;\\r\\n      height: 13px; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb {\\r\\n      background-color: #474143;\\r\\n      border-radius: 0;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb:hover {\\r\\n      background-color: #474143; }\\r\\n    .redditPosts__body::-webkit-scrollbar-track {\\r\\n      background-color: #A69E9D;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body li {\\r\\n      border-left: 1px solid #474143 !important;\\r\\n      border-right: 1px solid #474143 !important;\\r\\n      border-bottom: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li:first-child {\\r\\n        border-top: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li a {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        padding: 5px; }\\r\\n    .redditPosts__body .redditPosts__body--mobile {\\r\\n      border: 1px solid #A69E9D !important;\\r\\n      margin-bottom: 10px;\\r\\n      -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\r\\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5); }\\r\\n      .redditPosts__body .redditPosts__body--mobile:first-child {\\r\\n        border-top: 1px solid #A69E9D !important; }\\r\\n      .redditPosts__body .redditPosts__body--mobile:last-child {\\r\\n        margin-bottom: 0; }\\r\\n      .redditPosts__body .redditPosts__body--mobile a {\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n        position: relative; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a > div {\\r\\n          width: 100%; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          font-size: initial;\\r\\n          -ms-flex-direction: column-reverse;\\r\\n              flex-direction: column-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title {\\r\\n            width: initial; }\\r\\n            .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title > span {\\r\\n              position: absolute;\\r\\n              right: 1vh;\\r\\n              font-size: calc(3em + 1vmin);\\r\\n              top: 50%;\\r\\n              -webkit-transform: translateY(-50%);\\r\\n                  -ms-transform: translateY(-50%);\\r\\n                      transform: translateY(-50%);\\r\\n              opacity: .1; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created {\\r\\n            width: initial;\\r\\n            font-size: calc(.5em + 1vmin);\\r\\n            text-align: left;\\r\\n            opacity: .5; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body {\\r\\n          margin: 1vh 0;\\r\\n          width: 100%;\\r\\n          white-space: nowrap;\\r\\n          overflow: hidden;\\r\\n          -o-text-overflow: ellipsis;\\r\\n             text-overflow: ellipsis; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          -ms-flex-pack: space-evenly;\\r\\n              justify-content: space-evenly;\\r\\n          -ms-flex-direction: row-reverse;\\r\\n              flex-direction: row-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span {\\r\\n            font-size: calc(.8em + 1vmin) !important; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p {\\r\\n            font-size: calc(.6em + 1vmin) !important; }\\r\\n  .redditPosts__snippet--upvotes, .redditPosts__snippet--comments {\\r\\n    width: 10%; }\\r\\n  .redditPosts__snippet--created {\\r\\n    width: 20%;\\r\\n    text-align: center;\\r\\n    font-size: calc(.3em + 1vmin); }\\r\\n  .redditPosts__snippet--title {\\r\\n    width: 60%;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--title > span {\\r\\n      margin-right: 10px; }\\r\\n    .redditPosts__snippet--title .author {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n      font-size: calc(.5em + .5vmin);\\r\\n      opacity: .5; }\\r\\n      .redditPosts__snippet--title .author > span {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        color: #ff4006;\\r\\n        margin-left: 5px; }\\r\\n  .redditPosts__snippet--hasIcon {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n    -ms-flex-pack: center;\\r\\n        justify-content: center;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--hasIcon span {\\r\\n      font-size: calc(.5em + 1vmin) !important;\\r\\n      margin-bottom: 3px; }\\r\\n    .redditPosts__snippet--hasIcon p {\\r\\n      font-size: calc(.3em + 1vmin);\\r\\n      opacity: .5; }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/containers/pages/reddit/posts/content/content-styles.css\n// module id = 1780\n// module chunks = 13","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/pages/reddit/styles/reddit-styles.css\n// module id = 1781\n// module chunks = 13","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".subreddit__posts{grid-template-columns:100%}.subreddit__posts .container__page--inner .topbar{-ms-flex-pack:inherit;justify-content:inherit;background:#a69e9d}.subreddit__posts .container__page--inner .topbar li{margin:0 10px}.subreddit__posts .container__page--inner .topbar li a span{cursor:pointer;font-size:1vw;padding:5px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul{display:-ms-flexbox;display:flex;margin-top:2px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li{margin-left:15px;color:#474143}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span{font-size:25px;padding:5px;text-transform:capitalize}@media only screen and (max-width:815px){.subreddit__posts .container__page--inner .topbar li{margin:0 5px}.subreddit__posts .redditPosts{grid-template-rows:100%;margin:0}.subreddit__posts .redditPosts .redditPosts__body{padding:1vh;overflow:-moz-scrollbars-none;-ms-overflow-style:none}.subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar{display:none}}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/TERMINATOR/WebstormProjects/cfc-react/src/containers/pages/reddit/styles/reddit-styles.css\"],\"names\":[],\"mappings\":\"AAAA,kBACE,0BAA4B,CAAE,AAC9B,kDACE,sBAAuB,AACnB,wBAAyB,AAC7B,kBAAoB,CAAE,AACtB,qDACE,aAAe,CAAE,AACjB,4DACE,eAAgB,AAChB,cAAe,AACf,WAAa,CAAE,AACnB,0EACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,6EACE,oBAAqB,AACrB,aAAc,AACd,cAAgB,CAAE,AAClB,gFACE,iBAAkB,AAClB,aAAe,CAAE,AACjB,uFACE,eAAgB,AAChB,YAAa,AACb,yBAA2B,CAAE,AAKzC,yCACE,qDACE,YAAc,CAAE,AAClB,+BACE,wBAAyB,AACzB,QAAU,CAAE,AACZ,kDACE,YAAa,AACb,8BAA+B,AAC/B,uBAAyB,CAAE,AAC3B,qEACE,YAAc,CAAE,CAAE\",\"file\":\"reddit-styles.css\",\"sourcesContent\":[\".subreddit__posts {\\r\\n  grid-template-columns: 100%; }\\r\\n  .subreddit__posts .container__page--inner .topbar {\\r\\n    -ms-flex-pack: inherit;\\r\\n        justify-content: inherit;\\r\\n    background: #A69E9D; }\\r\\n    .subreddit__posts .container__page--inner .topbar li {\\r\\n      margin: 0 10px; }\\r\\n      .subreddit__posts .container__page--inner .topbar li a span {\\r\\n        cursor: pointer;\\r\\n        font-size: 1vw;\\r\\n        padding: 5px; }\\r\\n    .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center; }\\r\\n      .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        margin-top: 2px; }\\r\\n        .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li {\\r\\n          margin-left: 15px;\\r\\n          color: #474143; }\\r\\n          .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span {\\r\\n            font-size: 25px;\\r\\n            padding: 5px;\\r\\n            text-transform: capitalize; }\\r\\n\\r\\n/*\\r\\n * Desktop\\r\\n */\\r\\n@media only screen and (max-width: 815px) {\\r\\n  .subreddit__posts .container__page--inner .topbar li {\\r\\n    margin: 0 5px; }\\r\\n  .subreddit__posts .redditPosts {\\r\\n    grid-template-rows: 100%;\\r\\n    margin: 0; }\\r\\n    .subreddit__posts .redditPosts .redditPosts__body {\\r\\n      padding: 1vh;\\r\\n      overflow: -moz-scrollbars-none;\\r\\n      -ms-overflow-style: none; }\\r\\n      .subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar {\\r\\n        display: none; } }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/containers/pages/reddit/styles/reddit-styles.css\n// module id = 1782\n// module chunks = 13","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Topbar from './topbar/topbar';\r\nimport Content from './content/content';\r\nimport {fetchRedditPostsRequest, resetRedditState} from \"../../../../redux/reddit/posts/actions\";\r\nimport '../styles/reddit-styles.css';\r\n\r\nclass RedditPosts extends Component {\r\n  componentDidMount() {\r\n    const {posts, fetchRedditPostsRequest} = this.props;\r\n    const {activeCategory} = posts;\r\n    document.title = `r/hearthstone - ${_.startCase(activeCategory)}`;\r\n\r\n    if(!posts.all) {\r\n      fetchRedditPostsRequest(\"hot\");\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.resetRedditState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container__page container__page--oneSided subreddit subreddit__posts\">\r\n          <div className=\"container__page--inner\">\r\n            <Topbar />\r\n            <Content />\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {posts, activeCategory} = state.redditPosts;\r\n  return {posts, activeCategory};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchRedditPostsRequest: (payload) => dispatch(fetchRedditPostsRequest(payload)),\r\n    resetRedditState: () => dispatch(resetRedditState())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedditPosts);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/posts.js","import React from 'react';\r\nimport Tooltip from 'antd/lib/tooltip';\r\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now';\r\nimport format from 'date-fns/format';\r\n\r\n/**\r\n * Writes date when created (https://date-fns.org/docs/format#examples)\r\n * @param created\r\n * @param createdFormatted\r\n * @param placement\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {XML}\r\n */\r\nexport const notEdited = (created, createdFormatted, placement, tooltip) =>{\r\n  return tooltip\r\n      ? <Tooltip title={`created ${createdFormatted}`} placement={placement}>\r\n          {created}\r\n        </Tooltip>\r\n      : created;\r\n\r\n};\r\n\r\n/**\r\n * Adds '*' symbol to date when post was edited\r\n *\r\n * @param {number} created - The time of creation in UTC epoch-second format. (passing created_utc if it's from reddit json)\r\n * @param {number} createdFormatted - Formatted date into `DD-MM-YYYY HH:mm`\r\n * @param {special} edited - False if not edited, edit date in UTC epoch-seconds otherwise\r\n * @param {number} editedFormatted - Formatted date into `DD-MM-YYYY HH:mm`\r\n * @param {string} placement - Position of the tooltip (https://ant.design/components/tooltip/#Common-API)\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {XML}\r\n */\r\nexport const editedWrapper = (created, createdFormatted, edited, editedFormatted, placement, tooltip) =>{\r\n  return tooltip\r\n      ? <p>\r\n          <Tooltip title={`created ${createdFormatted}`} placement={placement}>{created}</Tooltip>\r\n          <Tooltip title={`last edited ${editedFormatted}`} placement={placement}>{' *'}</Tooltip>\r\n        </p>\r\n      : created;\r\n};\r\n\r\n/**\r\n * Converts time from miliseconds to seconds\r\n *\r\n * @param {number} time - date in unix format\r\n * @returns {number}\r\n */\r\nexport const toSeconds = (time) =>{\r\n  return time * 1000;\r\n};\r\n\r\n/**\r\n * Wraps element into ant-design Tooltip to give more detailed date on hover.\r\n * @example Without any action: 42 minutes ago\r\n *          On hover: 01/07/2017 13:37\r\n *\r\n * @param {number} created - The time of creation in UTC epoch-second format. (passing created_utc if it's from reddit json)\r\n * @param {special} edited - False if not edited, edit date in UTC epoch-seconds otherwise\r\n * @param {string} placement - Position of the tooltip (https://ant.design/components/tooltip/#Common-API)\r\n * @param {bool} tooltip - show or hide tooltip\r\n * @returns {String}\r\n */\r\nexport const wrapDate = (created, edited = false, placement = \"bottom\", tooltip = true) => {\r\n  const options = {includeSeconds: true, addSuffix: true};\r\n  const dateFormat = 'DD-MM-YYYY HH:mm';\r\n\r\n  let createdFormatted = format(toSeconds(created), dateFormat);\r\n  let timeDifference = distanceInWordsToNow(toSeconds(created), options);\r\n  let editedTimeFormatted = format(toSeconds(edited), dateFormat);\r\n\r\n  return (\r\n      edited === false\r\n          ? notEdited(timeDifference, createdFormatted, placement, tooltip)\r\n          : editedWrapper(timeDifference, createdFormatted, toSeconds(edited), editedTimeFormatted, placement, tooltip)\r\n  )\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/wrap-date.js"],"sourceRoot":""}