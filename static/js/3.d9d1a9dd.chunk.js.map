{"version":3,"sources":["../static/js/3.d9d1a9dd.chunk.js","containers/pages/reddit/posts/posts.js","containers/pages/reddit/posts/content/body/assets/upvotes.js","containers/pages/reddit/posts/content/body/assets/title.js","containers/pages/reddit/posts/content/body/assets/comments.js","containers/pages/reddit/posts/content/body/assets/created.js","containers/pages/reddit/posts/topbar/topbar.js","containers/pages/reddit/posts/topbar/topbar-left.js","containers/pages/reddit/posts/topbar/topbar-right.js","containers/pages/reddit/posts/content/content.js","containers/pages/reddit/posts/content/header/header.js","containers/pages/reddit/posts/content/header/header-item.js","containers/pages/reddit/posts/content/body/body.js","containers/pages/reddit/posts/content/body/body-item.js","containers/pages/reddit/posts/content/body/body-item-mobile.js","webpack:///./src/containers/pages/reddit/posts/content/content-styles.css?a34f","containers/pages/reddit/posts/content/content-styles.css","webpack:///./src/containers/pages/reddit/styles/reddit-styles.css?cd3c","containers/pages/reddit/styles/reddit-styles.css"],"names":["webpackJsonp","1814","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2_lodash__","__WEBPACK_IMPORTED_MODULE_2_lodash___default","__WEBPACK_IMPORTED_MODULE_3__topbar_topbar__","__WEBPACK_IMPORTED_MODULE_4__content_content__","__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","RedditPosts","_Component","this","getPrototypeOf","apply","arguments","_props","posts","fetchRedditPostsRequest","activeCategory","document","title","a","startCase","all","resetRedditState","createElement","className","mapStateToProps","state","_state$redditPosts","redditPosts","mapDispatchToProps","dispatch","payload","1829","__WEBPACK_IMPORTED_MODULE_1__components_icon__","RedditPostUpvotes","_ref","post","ups","name","1830","RedditPostTitle","domain","link_flair_text","author","type","linkFlairText","unescape","1831","RedditPostComments","num_comments","1832","__WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__","RedditPostCreated","created_utc","edited","1879","__WEBPACK_IMPORTED_MODULE_1__topbar_left__","__WEBPACK_IMPORTED_MODULE_2__topbar_right__","Topbar","1880","__WEBPACK_IMPORTED_MODULE_2__utils_posts__","__WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_4__components_icon__","_typeof","Symbol","iterator","obj","TopbarLeft","_temp","_this","_ret","_len","args","Array","_key","concat","handleDomainClick","e","domainObj","_this$props","selectRedditDomain","selectedDomain","currentTarget","id","active","_this2","map","supportedDomain","icon","onClick","1881","__WEBPACK_IMPORTED_MODULE_1_lodash__","__WEBPACK_IMPORTED_MODULE_1_lodash___default","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3__utils_posts__","__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__","__WEBPACK_IMPORTED_MODULE_5__components_icon__","TopbarRight","handleCategoryClick","updatePosts","selectRedditCategory","selectedCategory","category","tooltip","tooltipPlacement","1882","__WEBPACK_IMPORTED_MODULE_2__header_header__","__WEBPACK_IMPORTED_MODULE_3__body_body__","__WEBPACK_IMPORTED_MODULE_4__content_styles_css__","__WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__","Content","_props$posts","loading","windowWidth","app","windowSize","1883","__WEBPACK_IMPORTED_MODULE_1__header_item__","RedditPostsHeader","1884","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","RedditHeaderItem","propTypes","string","isRequired","defaultProps","undefined","1885","__WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__","__WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__","__WEBPACK_IMPORTED_MODULE_5__body_item__","__WEBPACK_IMPORTED_MODULE_6__utils_posts__","__WEBPACK_IMPORTED_MODULE_7__body_item_mobile__","RedditPostsBody","handlePostClick","updateActivePost","updatePostComments","postId","find","p","mapPosts","url","kebabCase","mapMobilePosts","filterPostsByDomain","filter","includes","allPosts","isEmpty","1886","__WEBPACK_IMPORTED_MODULE_1_react_router_dom__","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default","__WEBPACK_IMPORTED_MODULE_3__assets_upvotes__","__WEBPACK_IMPORTED_MODULE_4__assets_title__","__WEBPACK_IMPORTED_MODULE_5__assets_comments__","__WEBPACK_IMPORTED_MODULE_6__assets_created__","RedditPostsBodyItem","to","object","1887","__WEBPACK_IMPORTED_MODULE_3_prop_types__","__WEBPACK_IMPORTED_MODULE_3_prop_types___default","__WEBPACK_IMPORTED_MODULE_4__assets_upvotes__","__WEBPACK_IMPORTED_MODULE_5__assets_title__","__WEBPACK_IMPORTED_MODULE_6__assets_comments__","__WEBPACK_IMPORTED_MODULE_7__assets_created__","RedditPostsBodyItemMobile","selftext","1888","exports","content","options","hmr","transform","locals","1889","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","1890","1891"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YAY8f,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAXhyCE,OAAOS,eAAevB,EAAqB,cAAgBiB,OAAO,GAC7C,IAAIO,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEG,EAA4C1B,EAAoB,IAChE2B,EAAuC3B,EAAoB,IAC3D4B,EAA+C5B,EAAoByB,EAAEE,GACrEE,EAA+C7B,EAAoB,MACnE8B,EAAiD9B,EAAoB,MACrE+B,EAA4D/B,EAAoB,KAChFgC,EAA0DhC,EAAoB,MAEnGiC,GADuFjC,EAAoByB,EAAEO,GAChG,WAAW,QAASE,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASpC,EAAYsC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB/B,EAAYS,UAAU6B,GAAeC,GAAYR,EAAiB/B,EAAYuC,GAAoBvC,OCTtewC,EDSszC,SAASC,GAA8C,QAASD,KAAgD,MAAlC1C,GAAgB4C,KAAKF,GAAoBtC,EAA2BwC,MAAMF,EAAYtB,WAAWR,OAAOiC,eAAeH,IAAcI,MAAMF,KAAKG,YAAiiC,MAA1uCvC,GAAUkC,EAAYC,GAAgMX,EAAaU,IAAcH,IAAI,oBAAoBxB,MAAM,WCR1kD,GAAAiC,GACuBJ,KAAKT,MAAvCc,EADWD,EACXC,MAAOC,EADIF,EACJE,wBACPC,EAAkBF,EAAlBE,cACPC,UAASC,MAAT,mBAAoC1B,EAAA2B,EAAEC,UAAUJ,GAE5CF,EAAMO,KACRN,EAAwB,UDEq4DX,IAAI,uBAAuBxB,MAAM,WCGh8D6B,KAAKT,MAAMsB,sBDHu/DlB,IAAI,SAASxB,MAAM,WCOrhE,MACIQ,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,wEACbpC,EAAA+B,EAAAI,cAAA,OAAKC,UAAU,0BACbpC,EAAA+B,EAAAI,cAAC9B,EAAA,EAAD,MACAL,EAAA+B,EAAAI,cAAC7B,EAAA,EAAD,YDXsjFa,GCTxiFpB,EAAA,WA2BpBsC,EAAkB,SAACC,GAAU,GAAAC,GACDD,EAAME,WACtC,QAAQd,MAFyBa,EAC1Bb,MACQE,eAFkBW,EACnBX,iBAIVa,EAAqB,SAACC,GAC1B,OACEf,wBAAyB,SAACgB,GAAD,MAAaD,GAASrD,OAAAkB,EAAA,GAAwBoC,KACvET,iBAAkB,iBAAMQ,GAASrD,OAAAkB,EAAA,QAIrChC,GAAA,QAAec,OAAAa,EAAA,GAAQmC,EAAiBI,GAAoBtB,ID1BtDyB,KACA,SAAUtE,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpE8C,EAAiDrE,EAAoB,IExBxFsE,EAAoB,SAAAC,GAAY,GAAVC,GAAUD,EAAVC,KACnBC,EAAOD,EAAPC,GAEP,OACEjD,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,+DACbpC,EAAA+B,EAAAI,cAACU,EAAA,GAAKK,KAAK,cACXlD,EAAA+B,EAAAI,cAAA,SAAIc,IAKV1E,GAAA,KFkBM4E,KACA,SAAU7E,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpE8C,EAAiDrE,EAAoB,IACrE2B,EAAuC3B,EAAoB,IAC3D4B,EAA+C5B,EAAoByB,EAAEE,GGpCxFiD,EAAkB,SAAAL,GAAY,GAAVC,GAAUD,EAAVC,KACjBlB,EAA0CkB,EAA1ClB,MAAOuB,EAAmCL,EAAnCK,OAAQC,EAA2BN,EAA3BM,gBAAiBC,EAAUP,EAAVO,MAEvC,OACEvD,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,+BACbpC,EAAA+B,EAAAI,cAACU,EAAA,GAAKK,KAAMG,EAAQG,KAAK,SAASH,OAAQA,EAAQI,cAAeH,IACjEtD,EAAA+B,EAAAI,cAAA,OAAKC,UAAU,gBACbpC,EAAA+B,EAAAI,cAAA,KAAGC,UAAU,SAAShC,EAAA2B,EAAE2B,SAAS5B,IACjC9B,EAAA+B,EAAAI,cAAA,KAAGC,UAAU,UAAb,aAAgCpC,EAAA+B,EAAAI,cAAA,YAAMnC,EAAA+B,EAAAI,cAACU,EAAA,GAAKK,KAAK,WAAWK,MAMpEhF,GAAA,KH2BMoF,KACA,SAAUrF,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpE8C,EAAiDrE,EAAoB,IIhDxFoF,EAAqB,SAAAb,GAAY,GAAVC,GAAUD,EAAVC,KACpBa,EAAgBb,EAAhBa,YAEP,OACE7D,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,gEACbpC,EAAA+B,EAAAI,cAACU,EAAA,GAAKK,KAAK,aACXlD,EAAA+B,EAAAI,cAAA,SAAI0B,IAKVtF,GAAA,KJ0CMuF,KACA,SAAUxF,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEgE,EAAiDvF,EAAoB,KK3DxFwF,EAAoB,SAAAjB,GAAY,GAAVC,GAAUD,EAAVC,KACnBiB,EAAuBjB,EAAvBiB,YAAaC,EAAUlB,EAAVkB,MAEpB,OACElE,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,iCACZ/C,OAAA0E,EAAA,GAASE,EAAaC,IAK7B3F,GAAA,KLsDM4F,KACA,SAAU7F,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEqE,EAA6C5F,EAAoB,MACjE6F,EAA8C7F,EAAoB,MMtErF8F,EAAS,iBACbtE,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,UACbpC,EAAA+B,EAAAI,cAACiC,EAAA,EAAD,MACApE,EAAA+B,EAAAI,cAACkC,EAAA,EAAD,OAIJ9F,GAAA,KNoEMgG,KACA,SAAUjG,EAAQC,EAAqBC,GAE7C,YAOuuB,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GANp/C,GAAIY,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEG,EAA4C1B,EAAoB,IAChEgG,EAA6ChG,EAAoB,KACjEiG,EAA4DjG,EAAoB,KAChFkG,EAAiDlG,EAAoB,IAC1FmG,EAAwB,mBAATC,SAA8C,iBAAlBA,QAAOC,SAAoB,SAASC,GAAK,aAAcA,IAAM,SAASA,GAAK,MAAOA,IAAqB,mBAATF,SAAqBE,EAAIvF,cAAcqF,QAAQE,IAAMF,OAAOxF,UAAU,eAAgB0F,IAAUrE,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASpC,EAAYsC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB/B,EAAYS,UAAU6B,GAAeC,GAAYR,EAAiB/B,EAAYuC,GAAoBvC,MOnF/sBoG,EPmF8hD,SAAS3D,GAA6C,QAAS2D,KAAa,GAAIhC,GAASiC,EAAMC,EAAMC,CAAKzG,GAAgB4C,KAAK0D,EAAY,KAAI,GAAII,GAAK3D,UAAUV,OAAOsE,EAAKC,MAAMF,GAAMG,EAAK,EAAEA,EAAKH,EAAKG,IAAQF,EAAKE,GAAM9D,UAAU8D,EAAO,OAAaN,GAAOC,EAAMpG,EAA2BwC,MAAM0B,EAAKgC,EAAWlF,WAAWR,OAAOiC,eAAeyD,IAAahG,KAAKwC,MAAMwB,GAAM1B,MAAMkE,OAAOH,KAAeH,EOlFv7DO,kBAAoB,SAACC,EAAGC,GAAc,GAAAC,GACCV,EAAKrE,MAAnCgF,EAD6BD,EAC7BC,mBAAoBvC,EADSsC,EACTtC,OACrBwC,EAAiBJ,EAAEK,cAAcC,EAEnCF,KAAmBxC,EAAO2C,QAC5BJ,GAAoBI,OAAQH,EAAgBf,IAAKY,IAGhDG,IAAmBxC,EAAO2C,QAC3BJ,GAAoBI,OAAQ,GAAIlB,UPyEovDI,EAAsgBF,EAAOnG,EAA2BoG,EAAMC,GAAq2B,MAApnDjG,GAAU8F,EAAW3D,GAAiwBX,EAAasE,IAAa/D,IAAI,SAASxB,MAAM,WOrEj3E,GAAAyG,GAAA5E,KACAgC,EAAUhC,KAAKT,MAAfyC,MAEP,OACErD,GAAA+B,EAAAI,cAAA,MAAIC,UAAU,eACXoC,EAAA,EAAiB0B,IAAI,SAACC,EAAiBtF,GAAlB,MACpBb,GAAA+B,EAAAI,cAAA,MAAInB,IAAA,UAAeH,EAAKkF,GAAII,EAAgBC,KAAMC,QAAS,SAACZ,GAAD,MAAOQ,GAAKT,kBAAkBC,EAAGU,KAC1FnG,EAAA+B,EAAAI,cAACuC,EAAA,GAAKxB,KAAMiD,EAAgBC,KACtB/C,OAA0C,WAAlCsB,EAAQwB,EAAgBjD,MAAqBiD,EAAgBjD,KAAK,GAAKiD,EAAgBjD,KAC/FM,KAAK,SACLpB,UAAc+D,EAAgBC,KAA9B,KAAsCD,EAAgBC,OAAS/C,EAAO2C,OAAS,SAAW,cP2DwkGjB,GOnF3pGhF,EAAA,WAgCnBsC,EAAkB,SAAAC,GAEtB,OAASe,OADUf,EAAME,YAAYd,MAA7B2B,SAIJZ,EAAqB,SAAAC,GACzB,OACEkD,mBAAoB,SAAAvC,GAAA,MAAUX,GAASrD,OAAAoF,EAAA,GAAmBpB,MAI9D9E,GAAA,EAAec,OAAAa,EAAA,GAAQmC,EAAiBI,GAAoBsC,IP4CtDuB,KACA,SAAUhI,EAAQC,EAAqBC,GAE7C,YAS8f,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAR3wC,GAAIY,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEwG,EAAuC/H,EAAoB,IAC3DgI,EAA+ChI,EAAoByB,EAAEsG,GACrEE,EAA4CjI,EAAoB,IAChEkI,EAA6ClI,EAAoB,KACjEmI,EAA4DnI,EAAoB,KAChFoI,EAAiDpI,EAAoB,IAC1FiC,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASpC,EAAYsC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB/B,EAAYS,UAAU6B,GAAeC,GAAYR,EAAiB/B,EAAYuC,GAAoBvC,MQlGtekI,ERkGszC,SAASzF,GAA8C,QAASyF,KAAc,GAAI9D,GAASiC,EAAMC,EAAMC,CAAKzG,GAAgB4C,KAAKwF,EAAa,KAAI,GAAI1B,GAAK3D,UAAUV,OAAOsE,EAAKC,MAAMF,GAAMG,EAAK,EAAEA,EAAKH,EAAKG,IAAQF,EAAKE,GAAM9D,UAAU8D,EAAO,OAAaN,GAAOC,EAAMpG,EAA2BwC,MAAM0B,EAAK8D,EAAYhH,WAAWR,OAAOiC,eAAeuF,IAAc9H,KAAKwC,MAAMwB,GAAM1B,MAAMkE,OAAOH,KAAeH,EQjGptD6B,oBAAsB,SAACrB,GAAM,GAAAE,GACiCV,EAAKrE,MAA1DmG,EADoBpB,EACpBoB,YAAaC,EADOrB,EACPqB,qBAAsBpF,EADf+D,EACe/D,eACpCqF,EAAmBxB,EAAEK,cAAcC,EAErCkB,KAAqBrF,IACvBmF,EAAYE,GACZD,EAAqBC,IAGpBA,IAAqBrF,IACtBmF,EAAY,OACZC,EAAqB,SRsF0hD9B,EAAmlBF,EAAOnG,EAA2BoG,EAAMC,GAAuzB,MAAtpDjG,GAAU4H,EAAYzF,GAAg1BX,EAAaoG,IAAc7F,IAAI,SAASxB,MAAM,WQlF1tE,GAAAyG,GAAA5E,KACAO,EAAkBP,KAAKT,MAAvBgB,cAEP,OACE5B,GAAA+B,EAAAI,cAAA,MAAIC,UAAU,gBACXsE,EAAA,EAAWR,IAAI,SAACgB,EAAUrG,GAAX,MACdb,GAAA+B,EAAAI,cAAA,MAAInB,IAAKH,EACLwF,QAAS,SAAAZ,GAAA,MAAKQ,GAAKa,oBAAoBrB,IACvCM,GAAImB,EAAShE,MACflD,EAAA+B,EAAAI,cAACyE,EAAA,GAAK1D,KAAMgE,EAASd,KACfe,SAAS,EACTC,iBAAiB,SACjBtF,MAAO0E,EAAAzE,EAAEC,UAAUkF,EAAShE,MAC5Bd,UAAA,SAAmB8E,EAAShE,OAAStB,EAAiB,SAAW,cRqE25FiF,GQlGp9F9G,EAAA,WAqCpBsC,EAAkB,SAAAC,GAEtB,OAASV,eADkBU,EAAME,YAAYd,MAArCE,iBAIJa,EAAqB,SAAAC,GACzB,OACEqE,YAAa,SAACpE,GAAD,MAAaD,GAASrD,OAAAsH,EAAA,GAAwBhE,KAC3DqE,qBAAsB,SAAAE,GAAA,MAAYxE,GAASrD,OAAAsH,EAAA,GAAqBO,MAGpE3I,GAAA,EAAec,OAAAoH,EAAA,GAAQpE,EAAiBI,GAAoBoE,IRsDtDQ,KACA,SAAU/I,EAAQC,EAAqBC,GAE7C,YAS8f,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAR3wC,GAAIY,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEG,EAA4C1B,EAAoB,IAChE8I,EAA+C9I,EAAoB,MACnE+I,EAA2C/I,EAAoB,MAC/DgJ,EAAoDhJ,EAAoB,MAExEiJ,GAD4DjJ,EAAoByB,EAAEuH,GACfhJ,EAAoB,KAC5GiC,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASpC,EAAYsC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB/B,EAAYS,UAAU6B,GAAeC,GAAYR,EAAiB/B,EAAYuC,GAAoBvC,MSlHte+I,ETkHkzC,SAAStG,GAA0C,QAASsG,KAAwC,MAA9BjJ,GAAgB4C,KAAKqG,GAAgB7I,EAA2BwC,MAAMqG,EAAQ7H,WAAWR,OAAOiC,eAAeoG,IAAUnG,MAAMF,KAAKG,YAA02B,MAA/hCvC,GAAUyI,EAAQtG,GAAgLX,EAAaiH,IAAU1G,IAAI,SAASxB,MAAM,WSjH/iD,GAAAmI,GACiBtG,KAAKT,MAAMc,MAA3BO,EADD0F,EACC1F,IAAK2F,EADND,EACMC,OACZ,OACE5H,GAAA+B,EAAAI,cAAA,OAAKC,UAAU,uBACZf,KAAKT,MAAMiH,YAAc,KAAO7H,EAAA+B,EAAAI,cAACmF,EAAA,EAAD,MAChCM,GAAW5H,EAAA+B,EAAAI,cAACsF,EAAA,EAAD,OAEVG,GAAW3F,GAAOjC,EAAA+B,EAAAI,cAACoF,EAAA,EAAD,OAElBK,KAAa3F,GAAsB,IAAfA,EAAInB,SACxBd,EAAA+B,EAAAI,cAAA,yDTuGy2EuF,GSlH71E3H,EAAA,WAkBhBsC,EAAkB,SAAAC,GAGtB,OAASuF,YAFavF,EAAMwF,IAAIC,WAAzBF,YAEenG,MADJY,EAAME,YAAhBd,OAIVnD,GAAA,EAAec,OAAAa,EAAA,GAAQmC,GAAiBqF,IT8FlCM,KACA,SAAU1J,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEkI,EAA6CzJ,EAAoB,MUhIpF0J,EAAoB,iBACxBlI,GAAA+B,EAAAI,cAAA,MAAIC,UAAU,uBACZpC,EAAA+B,EAAAI,cAAC8F,EAAA,GAAiB/E,KAAK,YACvBlD,EAAA+B,EAAAI,cAAC8F,EAAA,GAAiB/E,KAAK,UACvBlD,EAAA+B,EAAAI,cAAC8F,EAAA,GAAiB/E,KAAK,aACvBlD,EAAA+B,EAAAI,cAAC8F,EAAA,GAAiB/E,KAAK,aAI3B3E,GAAA,KV4HM4J,KACA,SAAU7J,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEqI,EAA2C5J,EAAoB,GAC/D6J,EAAmD7J,EAAoByB,EAAEmI,GACzEjI,EAAuC3B,EAAoB,IAC3D4B,EAA+C5B,EAAoByB,EAAEE,GW7IxFmI,EAAmB,SAAAvF,GAAA,GAAEG,GAAFH,EAAEG,IAAF,OACvBlD,GAAA+B,EAAAI,cAAA,MAAIC,UAAA,yBAAoCc,EAAQlC,IAAKkC,GAAO9C,EAAA2B,EAAEC,UAAUkB,IAG1EoF,GAAiBC,WACfrF,KAAMmF,EAAAtG,EAAUyG,OAAOC,YAGzBH,EAAiBI,cACfxF,SAAMyF,IAGRpK,EAAA,KXsIMqK,KACA,SAAUtK,EAAQC,EAAqBC,GAE7C,YAW8f,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAV3wC,GAAIY,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEwG,EAAuC/H,EAAoB,IAC3DgI,EAA+ChI,EAAoByB,EAAEsG,GACrEE,EAA4CjI,EAAoB,IAChEqK,EAA+DrK,EAAoB,KACnFsK,EAAgEtK,EAAoB,KACpFuK,EAA2CvK,EAAoB,MAC/DwK,EAA6CxK,EAAoB,KACjEyK,EAAkDzK,EAAoB,MAC3FiC,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASpC,EAAYsC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB/B,EAAYS,UAAU6B,GAAeC,GAAYR,EAAiB/B,EAAYuC,GAAoBvC,MY3JteuK,EZ2J0zC,SAAS9H,GAAkD,QAAS8H,KAAkB,GAAInG,GAASiC,EAAMC,EAAMC,CAAKzG,GAAgB4C,KAAK6H,EAAiB,KAAI,GAAI/D,GAAK3D,UAAUV,OAAOsE,EAAKC,MAAMF,GAAMG,EAAK,EAAEA,EAAKH,EAAKG,IAAQF,EAAKE,GAAM9D,UAAU8D,EAAO,OAAaN,GAAOC,EAAMpG,EAA2BwC,MAAM0B,EAAKmG,EAAgBrJ,WAAWR,OAAOiC,eAAe4H,IAAkBnK,KAAKwC,MAAMwB,GAAM1B,MAAMkE,OAAOH,KAAeH,EY1J5uDkE,gBAAkB,SAAC1D,GAAM,GAAAE,GAC+BV,EAAKrE,MAApDc,EADgBiE,EAChBjE,MAAO0H,EADSzD,EACTyD,iBAAkBC,EADT1D,EACS0D,mBACzBpH,EAAOP,EAAPO,IACDqH,EAAS7D,EAAEK,cAAcC,GACzB/C,EAAOf,EAAIsH,KAAK,SAAAC,GAAA,MAAKA,GAAEzD,KAAOuD,GAEjCtG,KACDoG,EAAiBpG,GACjBqG,EAAmBrG,EAAK+C,MZkJ2iEd,EY9IvkEwE,SAAW,SAAC/H,GAAD,MAAWA,GAAMwE,IAAI,SAAAlD,GAAQ,GAC/B+C,GAAa/C,EAAb+C,GAAIjE,EAASkB,EAATlB,MACL4H,kBAAsB3D,EAAtB,IAA4BS,EAAAzE,EAAE4H,UAAU7H,EAE9C,OACE9B,GAAA+B,EAAAI,cAAA,MAAI4D,GAAIA,EACJ/E,IAAK+E,EACL3D,UAAc/C,OAAA2J,EAAA,GAAgBhG,GAA9B,IAAuC3D,OAAA2J,EAAA,GAAoBhG,GAA3D,IAAoE3D,OAAA2J,EAAA,GAAahG,GAAjF,aACAqD,QAASpB,EAAKkE,iBAChBnJ,EAAA+B,EAAAI,cAAC4G,EAAA,GAAoB/F,KAAMA,EACN0G,IAAKA,EACLP,gBAAiBlE,EAAKkE,sBZmI8xFlE,EY9H/0F2E,eAAiB,SAAClI,GAAD,MAAWA,GAAMwE,IAAI,SAAAlD,GAAQ,GACrC+C,GAAa/C,EAAb+C,GAAIjE,EAASkB,EAATlB,MACL4H,kBAAsB3D,EAAtB,IAA4BS,EAAAzE,EAAE4H,UAAU7H,EAE9C,OACE9B,GAAA+B,EAAAI,cAAA,MAAI4D,GAAIA,EACJ/E,IAAK+E,EACL3D,UAAc/C,OAAA2J,EAAA,GAAgBhG,GAA9B,IAAuC3D,OAAA2J,EAAA,GAAoBhG,GAA3D,IAAoE3D,OAAA2J,EAAA,GAAahG,GAAjF,uCACAqD,QAASpB,EAAKkE,iBAChBnJ,EAAA+B,EAAAI,cAAC8G,EAAA,GAA0BjG,KAAMA,EACN0G,IAAKA,EACLP,gBAAiBlE,EAAKkE,sBZmHukHlE,EY9G9nH4E,oBAAsB,SAACnI,GACrB,MAAOA,GAAMO,IAAI6H,OAAO,SAAA9G,GAAA,MACW,iBAA1BtB,GAAM2B,OAAOyB,IAAI5B,KACpBF,EAAKK,SAAW3B,EAAM2B,OAAOyB,IAAI5B,KACjCxB,EAAM2B,OAAOyB,IAAI5B,KAAK6G,SAAS/G,EAAKK,WZ0GuhD6B,EAAgxEF,EAAOnG,EAA2BoG,EAAMC,GAA8d,MAAtgGjG,GAAUiK,EAAgB9H,GAAqhFX,EAAayI,IAAkBlI,IAAI,SAASxB,MAAM,WYtG36H,GAAAiC,GACsBJ,KAAKT,MAA3Bc,EADAD,EACAC,MAAOmG,EADPpG,EACOoG,YACPxE,EAAU3B,EAAV2B,OACD2G,EAAYxD,EAAAzE,EAAEkI,QAAQ5G,EAAO2C,QAA4CtE,EAAMO,IAAxCZ,KAAKwI,oBAAoBnI,EAEtE,OACE1B,GAAA+B,EAAAI,cAAA,MAAIC,UAAU,qBACXyF,GAAe,IACZxG,KAAKuI,eAAeI,GACpB3I,KAAKoI,SAASO,QZ6Fw0Id,GY3Jp0InJ,EAAA,WAqExBsC,EAAkB,SAAAC,GAGtB,OAAQuF,YAFcvF,EAAMwF,IAAIC,WAAzBF,YAEcnG,MADHY,EAAME,YAAhBd,QAIJe,EAAqB,SAAAC,GACzB,OACE2G,mBAAoB,SAAA1G,GAAA,MAAWD,GAASrD,OAAAwJ,EAAA,GAA+BlG,KACvEyG,iBAAkB,SAAAzG,GAAA,MAAWD,IAC3Bc,KAAMsF,EAAA,EAAoBnG,cAKhCuG,GAAgBX,aAChBW,EAAgBR,gBAEhBnK,EAAA,EAAec,OAAAoH,EAAA,GAAQpE,EAAiBI,GAAoByG,IZwEtDgB,KACA,SAAU5L,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEoK,EAAiD3L,EAAoB,IACrE4L,EAA2C5L,EAAoB,GAC/D6L,EAAmD7L,EAAoByB,EAAEmK,GACzEE,EAAgD9L,EAAoB,MACpE+L,EAA8C/L,EAAoB,MAClEgM,EAAiDhM,EAAoB,MACrEiM,EAAgDjM,EAAoB,Ma5KvFkM,EAAsB,SAAA3H,GAAiB,GAAfC,GAAeD,EAAfC,KAAM0G,EAAS3G,EAAT2G,GAElC,OACE1J,GAAA+B,EAAAI,cAACgI,EAAA,GAAKQ,GAAIjB,GACR1J,EAAA+B,EAAAI,cAACmI,EAAA,GAAkBtH,KAAMA,IACzBhD,EAAA+B,EAAAI,cAACoI,EAAA,GAAgBvH,KAAMA,IACvBhD,EAAA+B,EAAAI,cAACqI,EAAA,GAAmBxH,KAAMA,IAC1BhD,EAAA+B,EAAAI,cAACsI,EAAA,GAAkBzH,KAAMA,KAK/B0H,GAAoBnC,WAClBvF,KAAMqH,EAAAtI,EAAU6I,QAGlBrM,EAAA,KbiKMsM,KACA,SAAUvM,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEoK,EAAiD3L,EAAoB,IACrE2B,EAAuC3B,EAAoB,IAC3D4B,EAA+C5B,EAAoByB,EAAEE,GACrE2K,EAA2CtM,EAAoB,GAC/DuM,EAAmDvM,EAAoByB,EAAE6K,GACzEE,EAAgDxM,EAAoB,MACpEyM,EAA8CzM,EAAoB,MAClE0M,EAAiD1M,EAAoB,MACrE2M,EAAgD3M,EAAoB,Mc9LvF4M,EAA4B,SAAArI,GAAY,GAAVC,GAAUD,EAAVC,KAC3B+C,EAAuB/C,EAAvB+C,GAAIjE,EAAmBkB,EAAnBlB,MAAOuJ,EAAYrI,EAAZqI,QAElB,OACErL,GAAA+B,EAAAI,cAACgI,EAAA,GAAKQ,GAAA,gBAAoB5E,EAApB,IAA0B3F,EAAA2B,EAAE4H,UAAU7H,IAC1C9B,EAAA+B,EAAAI,cAAA,OAAKC,UAAU,gCACbpC,EAAA+B,EAAAI,cAAC8I,EAAA,GAAgBjI,KAAMA,IACvBhD,EAAA+B,EAAAI,cAACgJ,EAAA,GAAkBnI,KAAMA,KAE3BhD,EAAA+B,EAAAI,cAAA,OAAKC,UAAU,8BACZiJ,GAEHrL,EAAA+B,EAAAI,cAAA,OAAKC,UAAU,gCACbpC,EAAA+B,EAAAI,cAAC+I,EAAA,GAAmBlI,KAAMA,IAC1BhD,EAAA+B,EAAAI,cAAC6I,EAAA,GAAkBhI,KAAMA,MAMjCoI,GAA0B7C,WACxBvF,KAAM+H,EAAAhJ,EAAU6I,QAGlBrM,EAAA,Kd2KM+M,KACA,SAAUhN,EAAQiN,EAAS/M,Ge1MjC,GAAAgN,GAAAhN,EAAA,KACA,kBAAAgN,SAAAlN,EAAAuC,EAAA2K,EAAA,KAEA,IAEAC,IAAeC,KAAA,EACfD,GAAAE,cAHAA,EAKAnN,GAAA,MAAAgN,EAAAC,EACAD,GAAAI,SAAAtN,EAAAiN,QAAAC,EAAAI,SfoNMC,KACA,SAAUvN,EAAQiN,EAAS/M,GgBjOjC+M,EAAAjN,EAAAiN,QAAA/M,EAAA,UAKA+M,EAAAO,MAAAxN,EAAAuC,EAAA,47HAAm9H,IAAQkL,QAAA,EAAAC,SAAA,iHAAAC,SAAAC,SAAA,4pDAAAC,KAAA,qBAAAC,gBAAA,+xLAAgoPC,WAAA,OhB0OrlXC,KACA,SAAUhO,EAAQiN,EAAS/M,GiB7OjC,GAAAgN,GAAAhN,EAAA,KACA,kBAAAgN,SAAAlN,EAAAuC,EAAA2K,EAAA,KAEA,IAEAC,IAAeC,KAAA,EACfD,GAAAE,cAHAA,EAKAnN,GAAA,MAAAgN,EAAAC,EACAD,GAAAI,SAAAtN,EAAAiN,QAAAC,EAAAI,SjBuPMW,KACA,SAAUjO,EAAQiN,EAAS/M,GkBpQjC+M,EAAAjN,EAAAiN,QAAA/M,EAAA,UAKA+M,EAAAO,MAAAxN,EAAAuC,EAAA,ysCAAguC,IAAQkL,QAAA,EAAAC,SAAA,yGAAAC,SAAAC,SAAA,gdAAAC,KAAA,oBAAAC,gBAAA,msDAA+0EC,WAAA","file":"static/js/3.d9d1a9dd.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1814:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__topbar_topbar__ = __webpack_require__(1879);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_content__ = __webpack_require__(1882);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__ = __webpack_require__(287);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__ = __webpack_require__(1890);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__styles_reddit_styles_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RedditPosts=function(_Component){_inherits(RedditPosts,_Component);function RedditPosts(){_classCallCheck(this,RedditPosts);return _possibleConstructorReturn(this,(RedditPosts.__proto__||Object.getPrototypeOf(RedditPosts)).apply(this,arguments));}_createClass(RedditPosts,[{key:'componentDidMount',value:function componentDidMount(){var _props=this.props,posts=_props.posts,fetchRedditPostsRequest=_props.fetchRedditPostsRequest;var activeCategory=posts.activeCategory;document.title='r/hearthstone - '+__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.startCase(activeCategory);if(!posts.all){fetchRedditPostsRequest(\"hot\");}}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.props.resetRedditState();}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'container__page container__page--oneSided subreddit subreddit__posts'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'container__page--inner'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__topbar_topbar__[\"a\" /* default */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__content_content__[\"a\" /* default */],null)));}}]);return RedditPosts;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var _state$redditPosts=state.redditPosts,posts=_state$redditPosts.posts,activeCategory=_state$redditPosts.activeCategory;return{posts:posts,activeCategory:activeCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchRedditPostsRequest:function fetchRedditPostsRequest(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__[\"b\" /* fetchRedditPostsRequest */])(payload));},resetRedditState:function resetRedditState(){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__redux_reddit_posts_actions__[\"d\" /* resetRedditState */])());}};};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(RedditPosts));\n\n/***/ }),\n\n/***/ 1829:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(12);\nvar RedditPostUpvotes=function RedditPostUpvotes(_ref){var post=_ref.post;var ups=post.ups;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--upvotes redditPosts__snippet--hasIcon\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"circle-up\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",null,ups));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostUpvotes);\n\n/***/ }),\n\n/***/ 1830:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\nvar RedditPostTitle=function RedditPostTitle(_ref){var post=_ref.post;var title=post.title,domain=post.domain,link_flair_text=post.link_flair_text,author=post.author;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--title\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:domain,type:\"reddit\",domain:domain,linkFlairText:link_flair_text}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"name-details\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"title\"},__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.unescape(title)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"author\"},\"posted by \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"reddit\"}),author))));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostTitle);\n\n/***/ }),\n\n/***/ 1831:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_icon__ = __webpack_require__(12);\nvar RedditPostComments=function RedditPostComments(_ref){var post=_ref.post;var num_comments=post.num_comments;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--comments redditPosts__snippet--hasIcon\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_icon__[\"a\" /* default */],{name:\"bubbles2\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",null,num_comments));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostComments);\n\n/***/ }),\n\n/***/ 1832:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__ = __webpack_require__(102);\nvar RedditPostCreated=function RedditPostCreated(_ref){var post=_ref.post;var created_utc=post.created_utc,edited=post.edited;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"redditPosts__snippet--created\"},Object(__WEBPACK_IMPORTED_MODULE_1__utils_wrap_date__[\"a\" /* wrapDate */])(created_utc,edited));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostCreated);\n\n/***/ }),\n\n/***/ 1879:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__topbar_left__ = __webpack_require__(1880);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__topbar_right__ = __webpack_require__(1881);\nvar Topbar=function Topbar(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'topbar'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__topbar_left__[\"a\" /* default */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__topbar_right__[\"a\" /* default */],null));};/* harmony default export */ __webpack_exports__[\"a\"] = (Topbar);\n\n/***/ }),\n\n/***/ 1880:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_posts__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__ = __webpack_require__(287);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_icon__ = __webpack_require__(12);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TopbarLeft=function(_Component){_inherits(TopbarLeft,_Component);function TopbarLeft(){var _ref;var _temp,_this,_ret;_classCallCheck(this,TopbarLeft);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=TopbarLeft.__proto__||Object.getPrototypeOf(TopbarLeft)).call.apply(_ref,[this].concat(args))),_this),_this.handleDomainClick=function(e,domainObj){var _this$props=_this.props,selectRedditDomain=_this$props.selectRedditDomain,domain=_this$props.domain;var selectedDomain=e.currentTarget.id;if(selectedDomain!==domain.active){selectRedditDomain({active:selectedDomain,obj:domainObj});}if(selectedDomain===domain.active){selectRedditDomain({active:\"\",obj:{}});}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(TopbarLeft,[{key:'render',value:function render(){var _this2=this;var domain=this.props.domain;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'topbar-left'},__WEBPACK_IMPORTED_MODULE_2__utils_posts__[\"e\" /* supportedDomains */].map(function(supportedDomain,i){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{key:'domain_'+i,id:supportedDomain.icon,onClick:function onClick(e){return _this2.handleDomainClick(e,supportedDomain);}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_icon__[\"a\" /* default */],{name:supportedDomain.icon,domain:_typeof(supportedDomain.name)===\"object\"?supportedDomain.name[1]:supportedDomain.name,type:'reddit',className:supportedDomain.icon+' '+(supportedDomain.icon===domain.active?\"active\":\"\")}));}));}}]);return TopbarLeft;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var domain=state.redditPosts.posts.domain;return{domain:domain};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{selectRedditDomain:function selectRedditDomain(domain){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__redux_reddit_posts_actions__[\"f\" /* selectRedditDomain */])(domain));}};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(TopbarLeft));\n\n/***/ }),\n\n/***/ 1881:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_posts__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__ = __webpack_require__(287);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_icon__ = __webpack_require__(12);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TopbarRight=function(_Component){_inherits(TopbarRight,_Component);function TopbarRight(){var _ref;var _temp,_this,_ret;_classCallCheck(this,TopbarRight);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=TopbarRight.__proto__||Object.getPrototypeOf(TopbarRight)).call.apply(_ref,[this].concat(args))),_this),_this.handleCategoryClick=function(e){var _this$props=_this.props,updatePosts=_this$props.updatePosts,selectRedditCategory=_this$props.selectRedditCategory,activeCategory=_this$props.activeCategory;var selectedCategory=e.currentTarget.id;if(selectedCategory!==activeCategory){updatePosts(selectedCategory);selectRedditCategory(selectedCategory);}if(selectedCategory===activeCategory){updatePosts(\"hot\");selectRedditCategory(\"hot\");}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(TopbarRight,[{key:'render',value:function render(){var _this2=this;var activeCategory=this.props.activeCategory;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'topbar-right'},__WEBPACK_IMPORTED_MODULE_3__utils_posts__[\"a\" /* categories */].map(function(category,i){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{key:i,onClick:function onClick(e){return _this2.handleCategoryClick(e);},id:category.name},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_icon__[\"a\" /* default */],{name:category.icon,tooltip:true,tooltipPlacement:'bottom',title:__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.startCase(category.name),className:'mage '+(category.name===activeCategory?\"active\":\"\")}));}));}}]);return TopbarRight;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var activeCategory=state.redditPosts.posts.activeCategory;return{activeCategory:activeCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updatePosts:function updatePosts(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__[\"b\" /* fetchRedditPostsRequest */])(payload));},selectRedditCategory:function selectRedditCategory(category){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__redux_reddit_posts_actions__[\"e\" /* selectRedditCategory */])(category));}};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(TopbarRight));\n\n/***/ }),\n\n/***/ 1882:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__header_header__ = __webpack_require__(1883);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__body_body__ = __webpack_require__(1885);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_styles_css__ = __webpack_require__(1888);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__content_styles_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__content_styles_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__ = __webpack_require__(31);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Content=function(_Component){_inherits(Content,_Component);function Content(){_classCallCheck(this,Content);return _possibleConstructorReturn(this,(Content.__proto__||Object.getPrototypeOf(Content)).apply(this,arguments));}_createClass(Content,[{key:\"render\",value:function render(){var _props$posts=this.props.posts,all=_props$posts.all,loading=_props$posts.loading;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"content redditPosts\"},this.props.windowWidth>815&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__header_header__[\"a\" /* default */],null),loading&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_loaders_diamond_loader__[\"a\" /* default */],null),!loading&&all&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__body_body__[\"a\" /* default */],null),!loading&&(!all||all.length===0)&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,\"Couldn't find posts. Try again later.\"));}}]);return Content;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var windowWidth=state.app.windowSize.windowWidth;var posts=state.redditPosts.posts;return{windowWidth:windowWidth,posts:posts};};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps)(Content));\n\n/***/ }),\n\n/***/ 1883:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__header_item__ = __webpack_require__(1884);\nvar RedditPostsHeader=function RedditPostsHeader(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"ul\",{className:\"redditPosts__header\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"upvotes\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"title\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"comments\"}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__header_item__[\"a\" /* default */],{name:\"created\"}));};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsHeader);\n\n/***/ }),\n\n/***/ 1884:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\nvar RedditHeaderItem=function RedditHeaderItem(_ref){var name=_ref.name;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'redditPosts__snippet--'+name,key:name},__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.startCase(name));};RedditHeaderItem.propTypes={name:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired};RedditHeaderItem.defaultProps={name:undefined};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditHeaderItem);\n\n/***/ }),\n\n/***/ 1885:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__ = __webpack_require__(291);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__body_item__ = __webpack_require__(1886);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_posts__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__body_item_mobile__ = __webpack_require__(1887);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RedditPostsBody=function(_Component){_inherits(RedditPostsBody,_Component);function RedditPostsBody(){var _ref;var _temp,_this,_ret;_classCallCheck(this,RedditPostsBody);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=RedditPostsBody.__proto__||Object.getPrototypeOf(RedditPostsBody)).call.apply(_ref,[this].concat(args))),_this),_this.handlePostClick=function(e){var _this$props=_this.props,posts=_this$props.posts,updateActivePost=_this$props.updateActivePost,updatePostComments=_this$props.updatePostComments;var all=posts.all;var postId=e.currentTarget.id;var post=all.find(function(p){return p.id===postId;});if(post){updateActivePost(post);updatePostComments(post.id);}},_this.mapPosts=function(posts){return posts.map(function(post){var id=post.id,title=post.title;var url='/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.kebabCase(title);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{id:id,key:id,className:Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"c\" /* checkIfStickied */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"b\" /* checkIfBlizzardPost */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"d\" /* stripDomains */])(post)+' table-row',onClick:_this.handlePostClick},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__body_item__[\"a\" /* default */],{post:post,url:url,handlePostClick:_this.handlePostClick}));});},_this.mapMobilePosts=function(posts){return posts.map(function(post){var id=post.id,title=post.title;var url='/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.kebabCase(title);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{id:id,key:id,className:Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"c\" /* checkIfStickied */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"b\" /* checkIfBlizzardPost */])(post)+' '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_posts__[\"d\" /* stripDomains */])(post)+' table-row redditPosts__body--mobile',onClick:_this.handlePostClick},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__body_item_mobile__[\"a\" /* default */],{post:post,url:url,handlePostClick:_this.handlePostClick}));});},_this.filterPostsByDomain=function(posts){return posts.all.filter(function(post){return typeof posts.domain.obj.name===\"string\"?post.domain===posts.domain.obj.name:posts.domain.obj.name.includes(post.domain);});},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(RedditPostsBody,[{key:'render',value:function render(){var _props=this.props,posts=_props.posts,windowWidth=_props.windowWidth;var domain=posts.domain;var allPosts=!__WEBPACK_IMPORTED_MODULE_1_lodash___default.a.isEmpty(domain.active)?this.filterPostsByDomain(posts):posts.all;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'redditPosts__body'},windowWidth<=815?this.mapMobilePosts(allPosts):this.mapPosts(allPosts));}}]);return RedditPostsBody;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){var windowWidth=state.app.windowSize.windowWidth;var posts=state.redditPosts.posts;return{windowWidth:windowWidth,posts:posts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updatePostComments:function updatePostComments(payload){return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__redux_reddit_comments_actions__[\"b\" /* fetchRedditPostCommentsRequest */])(payload));},updateActivePost:function updateActivePost(payload){return dispatch({type:__WEBPACK_IMPORTED_MODULE_4__redux_reddit_active_post_types__[\"h\" /* UPDATE_ACTIVE_POST */],payload:payload});}};};RedditPostsBody.propTypes={};RedditPostsBody.defaultProps={};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(RedditPostsBody));\n\n/***/ }),\n\n/***/ 1886:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_upvotes__ = __webpack_require__(1829);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__assets_title__ = __webpack_require__(1830);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__assets_comments__ = __webpack_require__(1831);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__assets_created__ = __webpack_require__(1832);\nvar RedditPostsBodyItem=function RedditPostsBodyItem(_ref){var post=_ref.post,url=_ref.url;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:url},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__assets_upvotes__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__assets_title__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__assets_comments__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__assets_created__[\"a\" /* default */],{post:post}));};RedditPostsBodyItem.propTypes={post:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsBodyItem);\n\n/***/ }),\n\n/***/ 1887:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__assets_upvotes__ = __webpack_require__(1829);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__assets_title__ = __webpack_require__(1830);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__assets_comments__ = __webpack_require__(1831);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__assets_created__ = __webpack_require__(1832);\nvar RedditPostsBodyItemMobile=function RedditPostsBodyItemMobile(_ref){var post=_ref.post;var id=post.id,title=post.title,selftext=post.selftext;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:'/reddit/post/'+id+'/'+__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.kebabCase(title)},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--header'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__assets_title__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__assets_created__[\"a\" /* default */],{post:post})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--body'},selftext),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'redditPosts__snippet--footer'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__assets_comments__[\"a\" /* default */],{post:post}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__assets_upvotes__[\"a\" /* default */],{post:post})));};RedditPostsBodyItemMobile.propTypes={post:__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object};/* harmony default export */ __webpack_exports__[\"a\"] = (RedditPostsBodyItemMobile);\n\n/***/ }),\n\n/***/ 1888:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1889);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1808)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 1889:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1807)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".redditPosts{margin:1vh 1vh 0;display:grid;grid-template-rows:4.5vh 71vh;grid-row-gap:1vh}.redditPosts__header{background:#474143;color:#e7e2da;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding-right:calc(1vh + 14px);text-align:center;padding-left:5px}.redditPosts__body{height:100%;overflow:auto;padding-right:1vh}.redditPosts__body::-webkit-scrollbar{width:13px;height:13px}.redditPosts__body::-webkit-scrollbar-thumb{background-color:#474143;border-radius:0;border-left:1px solid transparent}.redditPosts__body::-webkit-scrollbar-thumb:hover{background-color:#474143}.redditPosts__body::-webkit-scrollbar-track{background-color:#a69e9d;border-left:1px solid transparent}.redditPosts__body li{border-left:1px solid #474143!important;border-right:1px solid #474143!important;border-bottom:1px solid #474143!important}.redditPosts__body li:first-child{border-top:1px solid #474143!important}.redditPosts__body li a{display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:5px}.redditPosts__body .redditPosts__body--mobile{border:1px solid #a69e9d!important;margin-bottom:10px;-webkit-box-shadow:0 0 5px rgba(0,0,0,.5);box-shadow:0 0 5px rgba(0,0,0,.5)}.redditPosts__body .redditPosts__body--mobile:first-child{border-top:1px solid #a69e9d!important}.redditPosts__body .redditPosts__body--mobile:last-child{margin-bottom:0}.redditPosts__body .redditPosts__body--mobile a{-ms-flex-direction:column;flex-direction:column;position:relative}.redditPosts__body .redditPosts__body--mobile a>div{width:100%}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header{display:-ms-flexbox;display:flex;font-size:medium;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title{width:auto}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title>span{position:absolute;right:1vh;font-size:calc(3em + 1vmin);top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);opacity:.1}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created{width:auto;font-size:calc(.5em + 1vmin);text-align:left;opacity:.5}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body{margin:1vh 0;width:100%;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span{font-size:calc(.8em + 1vmin)!important}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p{font-size:calc(.6em + 1vmin)!important}.redditPosts__snippet--comments,.redditPosts__snippet--upvotes{width:10%}.redditPosts__snippet--created{width:20%;text-align:center;font-size:calc(.3em + 1vmin)}.redditPosts__snippet--title{width:60%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--title>span{margin-right:10px}.redditPosts__snippet--title .author{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;font-size:calc(.5em + .5vmin);opacity:.5}.redditPosts__snippet--title .author>span{color:#ff4006;margin-left:5px}.redditPosts__snippet--hasIcon,.redditPosts__snippet--title .author>span{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--hasIcon{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.redditPosts__snippet--hasIcon span{font-size:calc(.5em + 1vmin)!important;margin-bottom:3px}.redditPosts__snippet--hasIcon p{font-size:calc(.3em + 1vmin);opacity:.5}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/Sebastian/WebstormProjects/HearthLounge/src/containers/pages/reddit/posts/content/content-styles.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,iBAAsB,AACtB,aAAc,AACd,8BAA+B,AAC/B,gBAAkB,CAAE,AACpB,qBACE,mBAAoB,AACpB,cAAe,AACf,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,+BAAgC,AAChC,kBAAmB,AACnB,gBAAkB,CAAE,AACtB,mBACE,YAAa,AACb,cAAe,AACf,iBAAmB,CAAE,AACrB,sCACE,WAAY,AACZ,WAAa,CAAE,AACjB,4CACE,yBAA0B,AAC1B,gBAAiB,AACjB,iCAAmC,CAAE,AACvC,kDACE,wBAA0B,CAAE,AAC9B,4CACE,yBAA0B,AAC1B,iCAAmC,CAAE,AACvC,sBACE,wCAA0C,AAC1C,yCAA2C,AAC3C,yCAA4C,CAAE,AAC9C,kCACE,sCAAyC,CAAE,AAC7C,wBACE,oBAAqB,AACrB,aAAc,AACd,WAAY,AACZ,YAAa,AACb,qBAAsB,AAClB,uBAAwB,AAC5B,sBAAuB,AACnB,mBAAoB,AACxB,WAAa,CAAE,AACnB,8CACE,mCAAqC,AACrC,mBAAoB,AACpB,0CAA+C,AAC/C,iCAAuC,CAAE,AACzC,0DACE,sCAAyC,CAAE,AAC7C,yDACE,eAAiB,CAAE,AACrB,gDACE,0BAA2B,AACvB,sBAAuB,AAC3B,iBAAmB,CAAE,AACrB,oDACE,UAAY,CAAE,AAChB,8EACE,oBAAqB,AACrB,aAAc,AACd,iBAAmB,AACnB,kCAAmC,AAC/B,6BAA+B,CAAE,AACrC,2GACE,UAAe,CAAE,AACjB,gHACE,kBAAmB,AACnB,UAAW,AACX,4BAA6B,AAC7B,QAAS,AACT,mCAAoC,AAChC,+BAAgC,AAC5B,2BAA4B,AACpC,UAAY,CAAE,AAClB,6GACE,WAAe,AACf,6BAA8B,AAC9B,gBAAiB,AACjB,UAAY,CAAE,AAClB,4EACE,aAAc,AACd,WAAY,AACZ,mBAAoB,AACpB,gBAAiB,AACjB,0BAA2B,AACxB,sBAAwB,CAAE,AAC/B,8EACE,oBAAqB,AACrB,aAAc,AACd,2BAA4B,AACxB,6BAA8B,AAClC,+BAAgC,AAC5B,0BAA4B,CAAE,AAClC,mFACE,sCAAyC,CAAE,AAC7C,gFACE,sCAAyC,CAAE,AACrD,+DACE,SAAW,CAAE,AACf,+BACE,UAAW,AACX,kBAAmB,AACnB,4BAA8B,CAAE,AAClC,6BACE,UAAW,AACX,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,kCACE,iBAAmB,CAAE,AACvB,qCACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,8BAA+B,AAC/B,UAAY,CAAE,AACd,0CAKE,cAAe,AACf,eAAiB,CAAE,AACzB,yEANM,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAWF,AAR5B,+BAGE,0BAA2B,AACvB,sBAAuB,AAC3B,qBAAsB,AAClB,sBAAwB,CAEF,AAC1B,oCACE,uCAAyC,AACzC,iBAAmB,CAAE,AACvB,iCACE,6BAA8B,AAC9B,UAAY,CAAE\",\"file\":\"content-styles.css\",\"sourcesContent\":[\".redditPosts {\\r\\n  margin: 1vh 1vh 0 1vh;\\r\\n  display: grid;\\r\\n  grid-template-rows: 4.5vh 71vh;\\r\\n  grid-row-gap: 1vh; }\\r\\n  .redditPosts__header {\\r\\n    background: #474143;\\r\\n    color: #E7E2DA;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center;\\r\\n    padding-right: calc(1vh + 14px);\\r\\n    text-align: center;\\r\\n    padding-left: 5px; }\\r\\n  .redditPosts__body {\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    padding-right: 1vh; }\\r\\n    .redditPosts__body::-webkit-scrollbar {\\r\\n      width: 13px;\\r\\n      height: 13px; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb {\\r\\n      background-color: #474143;\\r\\n      border-radius: 0;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb:hover {\\r\\n      background-color: #474143; }\\r\\n    .redditPosts__body::-webkit-scrollbar-track {\\r\\n      background-color: #A69E9D;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body li {\\r\\n      border-left: 1px solid #474143 !important;\\r\\n      border-right: 1px solid #474143 !important;\\r\\n      border-bottom: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li:first-child {\\r\\n        border-top: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li a {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        padding: 5px; }\\r\\n    .redditPosts__body .redditPosts__body--mobile {\\r\\n      border: 1px solid #A69E9D !important;\\r\\n      margin-bottom: 10px;\\r\\n      -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\r\\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5); }\\r\\n      .redditPosts__body .redditPosts__body--mobile:first-child {\\r\\n        border-top: 1px solid #A69E9D !important; }\\r\\n      .redditPosts__body .redditPosts__body--mobile:last-child {\\r\\n        margin-bottom: 0; }\\r\\n      .redditPosts__body .redditPosts__body--mobile a {\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n        position: relative; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a > div {\\r\\n          width: 100%; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          font-size: initial;\\r\\n          -ms-flex-direction: column-reverse;\\r\\n              flex-direction: column-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title {\\r\\n            width: initial; }\\r\\n            .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title > span {\\r\\n              position: absolute;\\r\\n              right: 1vh;\\r\\n              font-size: calc(3em + 1vmin);\\r\\n              top: 50%;\\r\\n              -webkit-transform: translateY(-50%);\\r\\n                  -ms-transform: translateY(-50%);\\r\\n                      transform: translateY(-50%);\\r\\n              opacity: .1; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created {\\r\\n            width: initial;\\r\\n            font-size: calc(.5em + 1vmin);\\r\\n            text-align: left;\\r\\n            opacity: .5; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body {\\r\\n          margin: 1vh 0;\\r\\n          width: 100%;\\r\\n          white-space: nowrap;\\r\\n          overflow: hidden;\\r\\n          -o-text-overflow: ellipsis;\\r\\n             text-overflow: ellipsis; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          -ms-flex-pack: space-evenly;\\r\\n              justify-content: space-evenly;\\r\\n          -ms-flex-direction: row-reverse;\\r\\n              flex-direction: row-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span {\\r\\n            font-size: calc(.8em + 1vmin) !important; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p {\\r\\n            font-size: calc(.6em + 1vmin) !important; }\\r\\n  .redditPosts__snippet--upvotes, .redditPosts__snippet--comments {\\r\\n    width: 10%; }\\r\\n  .redditPosts__snippet--created {\\r\\n    width: 20%;\\r\\n    text-align: center;\\r\\n    font-size: calc(.3em + 1vmin); }\\r\\n  .redditPosts__snippet--title {\\r\\n    width: 60%;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--title > span {\\r\\n      margin-right: 10px; }\\r\\n    .redditPosts__snippet--title .author {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n      font-size: calc(.5em + .5vmin);\\r\\n      opacity: .5; }\\r\\n      .redditPosts__snippet--title .author > span {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        color: #ff4006;\\r\\n        margin-left: 5px; }\\r\\n  .redditPosts__snippet--hasIcon {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n    -ms-flex-pack: center;\\r\\n        justify-content: center;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--hasIcon span {\\r\\n      font-size: calc(.5em + 1vmin) !important;\\r\\n      margin-bottom: 3px; }\\r\\n    .redditPosts__snippet--hasIcon p {\\r\\n      font-size: calc(.3em + 1vmin);\\r\\n      opacity: .5; }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1890:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1891);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1808)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 1891:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1807)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".subreddit__posts{grid-template-columns:100%}.subreddit__posts .container__page--inner .topbar{-ms-flex-pack:inherit;justify-content:inherit;background:#a69e9d}.subreddit__posts .container__page--inner .topbar li{margin:0 10px}.subreddit__posts .container__page--inner .topbar li a span{cursor:pointer;font-size:1vw;padding:5px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul{display:-ms-flexbox;display:flex;margin-top:2px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li{margin-left:15px;color:#474143}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span{font-size:25px;padding:5px;text-transform:capitalize}@media only screen and (max-width:815px){.subreddit__posts .container__page--inner .topbar li{margin:0 5px}.subreddit__posts .redditPosts{grid-template-rows:100%;margin:0}.subreddit__posts .redditPosts .redditPosts__body{padding:1vh;overflow:-moz-scrollbars-none;-ms-overflow-style:none}.subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar{display:none}}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/Sebastian/WebstormProjects/HearthLounge/src/containers/pages/reddit/styles/reddit-styles.css\"],\"names\":[],\"mappings\":\"AAAA,kBACE,0BAA4B,CAAE,AAC9B,kDACE,sBAAuB,AACnB,wBAAyB,AAC7B,kBAAoB,CAAE,AACtB,qDACE,aAAe,CAAE,AACjB,4DACE,eAAgB,AAChB,cAAe,AACf,WAAa,CAAE,AACnB,0EACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,6EACE,oBAAqB,AACrB,aAAc,AACd,cAAgB,CAAE,AAClB,gFACE,iBAAkB,AAClB,aAAe,CAAE,AACjB,uFACE,eAAgB,AAChB,YAAa,AACb,yBAA2B,CAAE,AAKzC,yCACE,qDACE,YAAc,CAAE,AAClB,+BACE,wBAAyB,AACzB,QAAU,CAAE,AACZ,kDACE,YAAa,AACb,8BAA+B,AAC/B,uBAAyB,CAAE,AAC3B,qEACE,YAAc,CAAE,CAAE\",\"file\":\"reddit-styles.css\",\"sourcesContent\":[\".subreddit__posts {\\r\\n  grid-template-columns: 100%; }\\r\\n  .subreddit__posts .container__page--inner .topbar {\\r\\n    -ms-flex-pack: inherit;\\r\\n        justify-content: inherit;\\r\\n    background: #A69E9D; }\\r\\n    .subreddit__posts .container__page--inner .topbar li {\\r\\n      margin: 0 10px; }\\r\\n      .subreddit__posts .container__page--inner .topbar li a span {\\r\\n        cursor: pointer;\\r\\n        font-size: 1vw;\\r\\n        padding: 5px; }\\r\\n    .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center; }\\r\\n      .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        margin-top: 2px; }\\r\\n        .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li {\\r\\n          margin-left: 15px;\\r\\n          color: #474143; }\\r\\n          .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span {\\r\\n            font-size: 25px;\\r\\n            padding: 5px;\\r\\n            text-transform: capitalize; }\\r\\n\\r\\n/*\\r\\n * Desktop\\r\\n */\\r\\n@media only screen and (max-width: 815px) {\\r\\n  .subreddit__posts .container__page--inner .topbar li {\\r\\n    margin: 0 5px; }\\r\\n  .subreddit__posts .redditPosts {\\r\\n    grid-template-rows: 100%;\\r\\n    margin: 0; }\\r\\n    .subreddit__posts .redditPosts .redditPosts__body {\\r\\n      padding: 1vh;\\r\\n      overflow: -moz-scrollbars-none;\\r\\n      -ms-overflow-style: none; }\\r\\n      .subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar {\\r\\n        display: none; } }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.d9d1a9dd.chunk.js","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Topbar from './topbar/topbar';\r\nimport Content from './content/content';\r\nimport {fetchRedditPostsRequest, resetRedditState} from \"../../../../redux/reddit/posts/actions\";\r\nimport '../styles/reddit-styles.css';\r\n\r\nclass RedditPosts extends Component {\r\n  componentDidMount() {\r\n    const {posts, fetchRedditPostsRequest} = this.props;\r\n    const {activeCategory} = posts;\r\n    document.title = `r/hearthstone - ${_.startCase(activeCategory)}`;\r\n\r\n    if(!posts.all) {\r\n      fetchRedditPostsRequest(\"hot\");\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.resetRedditState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container__page container__page--oneSided subreddit subreddit__posts\">\r\n          <div className=\"container__page--inner\">\r\n            <Topbar />\r\n            <Content />\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {posts, activeCategory} = state.redditPosts;\r\n  return {posts, activeCategory};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchRedditPostsRequest: (payload) => dispatch(fetchRedditPostsRequest(payload)),\r\n    resetRedditState: () => dispatch(resetRedditState())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedditPosts);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/posts.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\n\r\nconst RedditPostUpvotes = ({post}) => {\r\n  const {ups} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--upvotes redditPosts__snippet--hasIcon\">\r\n      <Icon name=\"circle-up\" />\r\n      <p>{ups}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostUpvotes;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/upvotes.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\nimport _ from \"lodash\";\r\n\r\nconst RedditPostTitle = ({post}) => {\r\n  const {title, domain, link_flair_text, author} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--title\">\r\n      <Icon name={domain} type=\"reddit\" domain={domain} linkFlairText={link_flair_text}/>\r\n      <div className=\"name-details\">\r\n        <p className=\"title\">{_.unescape(title)}</p>\r\n        <p className=\"author\">posted by <span><Icon name=\"reddit\"/>{author}</span></p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostTitle;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/title.js","import React from 'react';\r\nimport Icon from \"../../../../../../../components/icon\";\r\n\r\nconst RedditPostComments = ({post}) => {\r\n  const {num_comments} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--comments redditPosts__snippet--hasIcon\">\r\n      <Icon name=\"bubbles2\" />\r\n      <p>{num_comments}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostComments;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/comments.js","import React from 'react';\r\nimport {wrapDate} from \"../../../../../../../utils/wrap-date\";\r\n\r\nconst RedditPostCreated = ({post}) => {\r\n  const {created_utc, edited} = post;\r\n\r\n  return (\r\n    <div className=\"redditPosts__snippet--created\">\r\n      {wrapDate(created_utc, edited)}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RedditPostCreated;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/assets/created.js","import React from 'react';\r\nimport TopbarLeft from './topbar-left';\r\nimport TopbarRight from './topbar-right';\r\n\r\nconst Topbar = () => (\r\n  <div className=\"topbar\">\r\n    <TopbarLeft />\r\n    <TopbarRight />\r\n  </div>\r\n);\r\n\r\nexport default Topbar;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar.js","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {supportedDomains} from \"../../utils/posts\";\r\nimport {selectRedditDomain} from \"../../../../../redux/reddit/posts/actions\";\r\nimport Icon from \"../../../../../components/icon\";\r\n\r\nclass TopbarLeft extends Component {\r\n  handleDomainClick = (e, domainObj) => {\r\n    const {selectRedditDomain, domain} = this.props;\r\n    const selectedDomain = e.currentTarget.id;\r\n\r\n    if (selectedDomain !== domain.active) {\r\n      selectRedditDomain({active: selectedDomain, obj: domainObj});\r\n    }\r\n\r\n    if(selectedDomain === domain.active) {\r\n      selectRedditDomain({active: \"\", obj: {}});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {domain} = this.props;\r\n\r\n    return (\r\n      <ul className=\"topbar-left\">\r\n        {supportedDomains.map((supportedDomain, i) =>\r\n          <li key={`domain_${i}`} id={supportedDomain.icon} onClick={(e) => this.handleDomainClick(e, supportedDomain)}>\r\n            <Icon name={supportedDomain.icon}\r\n                  domain={(typeof supportedDomain.name) === \"object\" ? supportedDomain.name[1] : supportedDomain.name}\r\n                  type=\"reddit\"\r\n                  className={`${supportedDomain.icon} ${supportedDomain.icon === domain.active ? \"active\" : \"\"}`}/>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { domain } = state.redditPosts.posts;\r\n  return { domain };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectRedditDomain: domain => dispatch(selectRedditDomain(domain)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopbarLeft);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar-left.js","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport { connect } from 'react-redux';\r\nimport {categories} from \"../../utils/posts\";\r\nimport {fetchRedditPostsRequest, selectRedditCategory} from \"../../../../../redux/reddit/posts/actions\";\r\nimport Icon from \"../../../../../components/icon\";\r\n\r\nclass TopbarRight extends Component {\r\n  handleCategoryClick = (e) => {\r\n    const {updatePosts, selectRedditCategory, activeCategory} = this.props;\r\n    const selectedCategory = e.currentTarget.id;\r\n\r\n    if (selectedCategory !== activeCategory) {\r\n      updatePosts(selectedCategory);\r\n      selectRedditCategory(selectedCategory);\r\n    }\r\n\r\n    if(selectedCategory === activeCategory){\r\n      updatePosts(\"hot\");\r\n      selectRedditCategory(\"hot\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {activeCategory} = this.props;\r\n\r\n    return (\r\n      <ul className=\"topbar-right\">\r\n        {categories.map((category, i) =>\r\n          <li key={i}\r\n              onClick={e => this.handleCategoryClick(e)}\r\n              id={category.name}>\r\n            <Icon name={category.icon}\r\n                  tooltip={true}\r\n                  tooltipPlacement=\"bottom\"\r\n                  title={_.startCase(category.name)}\r\n                  className={`mage ${category.name === activeCategory ? \"active\" : \"\"}`}/>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { activeCategory } = state.redditPosts.posts;\r\n  return { activeCategory };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updatePosts: (payload) => dispatch(fetchRedditPostsRequest(payload)),\r\n    selectRedditCategory: category => dispatch(selectRedditCategory(category)),\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopbarRight);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/topbar/topbar-right.js","import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport RedditPostsHeader from \"./header/header\";\r\nimport RedditPostsBody from \"./body/body\";\r\nimport './content-styles.css';\r\nimport Loader from \"../../../../../components/loaders/diamond/loader\";\r\n\r\nclass Content extends Component {\r\n  render(){\r\n    const {all, loading} = this.props.posts;\r\n    return (\r\n      <div className=\"content redditPosts\">\r\n        {this.props.windowWidth > 815 && <RedditPostsHeader />}\r\n        {loading && <Loader/>}\r\n\r\n        {!loading && all && <RedditPostsBody />}\r\n\r\n        {!loading && (!all || all.length === 0) && (\r\n          <div>Couldn't find posts. Try again later.</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {windowWidth} = state.app.windowSize;\r\n  const { posts } = state.redditPosts;\r\n  return { windowWidth, posts };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Content);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/content.js","import React from 'react';\r\nimport RedditHeaderItem from \"./header-item\";\r\n\r\nconst RedditPostsHeader = () => (\r\n  <ul className=\"redditPosts__header\">\r\n    <RedditHeaderItem name=\"upvotes\"/>\r\n    <RedditHeaderItem name=\"title\"/>\r\n    <RedditHeaderItem name=\"comments\"/>\r\n    <RedditHeaderItem name=\"created\"/>\r\n  </ul>\r\n);\r\n\r\nexport default RedditPostsHeader;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/header/header.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst RedditHeaderItem = ({name}) => (\r\n  <li className={`redditPosts__snippet--${name}`} key={name}>{_.startCase(name)}</li>\r\n);\r\n\r\nRedditHeaderItem.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nRedditHeaderItem.defaultProps = {\r\n  name: undefined\r\n};\r\n\r\nexport default RedditHeaderItem;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/header/header-item.js","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport { connect } from 'react-redux';\r\nimport {fetchRedditPostCommentsRequest} from \"../../../../../../redux/reddit/comments/actions\";\r\nimport {UPDATE_ACTIVE_POST} from \"../../../../../../redux/reddit/active-post/types\";\r\nimport RedditPostsBodyItem from \"./body-item\";\r\nimport {checkIfBlizzardPost, checkIfStickied, stripDomains} from \"../../../utils/posts\";\r\nimport RedditPostsBodyItemMobile from \"./body-item-mobile\";\r\n\r\nclass RedditPostsBody extends Component {\r\n  handlePostClick = (e) => {\r\n    const {posts, updateActivePost, updatePostComments} = this.props;\r\n    const {all} = posts;\r\n    const postId = e.currentTarget.id;\r\n    const post = all.find(p => p.id === postId);\r\n\r\n    if(post) {\r\n      updateActivePost(post);\r\n      updatePostComments(post.id);\r\n    }\r\n  };\r\n\r\n  mapPosts = (posts) => posts.map(post => {\r\n    const {id, title} = post;\r\n    const url = `/reddit/post/${id}/${_.kebabCase(title)}`;\r\n\r\n    return (\r\n      <li id={id}\r\n          key={id}\r\n          className={`${checkIfStickied(post)} ${checkIfBlizzardPost(post)} ${stripDomains(post)} table-row`}\r\n          onClick={this.handlePostClick}>\r\n        <RedditPostsBodyItem post={post}\r\n                             url={url}\r\n                             handlePostClick={this.handlePostClick}/>\r\n      </li>\r\n    )\r\n  });\r\n\r\n  mapMobilePosts = (posts) => posts.map(post => {\r\n    const {id, title} = post;\r\n    const url = `/reddit/post/${id}/${_.kebabCase(title)}`;\r\n\r\n    return (\r\n      <li id={id}\r\n          key={id}\r\n          className={`${checkIfStickied(post)} ${checkIfBlizzardPost(post)} ${stripDomains(post)} table-row redditPosts__body--mobile`}\r\n          onClick={this.handlePostClick}>\r\n        <RedditPostsBodyItemMobile post={post}\r\n                                   url={url}\r\n                                   handlePostClick={this.handlePostClick}/>\r\n      </li>\r\n    )\r\n  });\r\n\r\n  filterPostsByDomain = (posts) => {\r\n    return posts.all.filter(post => (\r\n      typeof posts.domain.obj.name === \"string\"\r\n        ? post.domain === posts.domain.obj.name\r\n        : posts.domain.obj.name.includes(post.domain)\r\n    ))\r\n  };\r\n\r\n  render() {\r\n    const {posts, windowWidth} = this.props;\r\n    const {domain} = posts;\r\n    const allPosts = !_.isEmpty(domain.active) ? this.filterPostsByDomain(posts) : posts.all;\r\n\r\n    return (\r\n      <ul className=\"redditPosts__body\">\r\n        {windowWidth <= 815\r\n          ? this.mapMobilePosts(allPosts)\r\n          : this.mapPosts(allPosts)\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {windowWidth} = state.app.windowSize;\r\n  const { posts } = state.redditPosts;\r\n  return {windowWidth, posts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updatePostComments: payload => dispatch(fetchRedditPostCommentsRequest(payload)),\r\n    updateActivePost: payload => dispatch({\r\n      type: UPDATE_ACTIVE_POST, payload\r\n    }),\r\n  }\r\n};\r\n\r\nRedditPostsBody.propTypes = {};\r\nRedditPostsBody.defaultProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedditPostsBody);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body.js","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport RedditPostUpvotes from './assets/upvotes';\r\nimport RedditPostTitle from './assets/title';\r\nimport RedditPostComments from \"./assets/comments\";\r\nimport RedditPostCreated from \"./assets/created\";\r\n\r\nconst RedditPostsBodyItem = ({post, url}) => {\r\n\r\n  return (\r\n    <Link to={url}>\r\n      <RedditPostUpvotes post={post}/>\r\n      <RedditPostTitle post={post}/>\r\n      <RedditPostComments post={post}/>\r\n      <RedditPostCreated post={post}/>\r\n    </Link>\r\n  )\r\n};\r\n\r\nRedditPostsBodyItem.propTypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\nexport default RedditPostsBodyItem;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body-item.js","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport RedditPostUpvotes from './assets/upvotes';\r\nimport RedditPostTitle from './assets/title';\r\nimport RedditPostComments from \"./assets/comments\";\r\nimport RedditPostCreated from \"./assets/created\";\r\n\r\nconst RedditPostsBodyItemMobile = ({post}) => {\r\n  const {id, title, selftext} = post;\r\n\r\n  return (\r\n    <Link to={`/reddit/post/${id}/${_.kebabCase(title)}`}>\r\n      <div className=\"redditPosts__snippet--header\">\r\n        <RedditPostTitle post={post}/>\r\n        <RedditPostCreated post={post}/>\r\n      </div>\r\n      <div className=\"redditPosts__snippet--body\">\r\n        {selftext}\r\n      </div>\r\n      <div className=\"redditPosts__snippet--footer\">\r\n        <RedditPostComments post={post}/>\r\n        <RedditPostUpvotes post={post}/>\r\n      </div>\r\n    </Link>\r\n  )\r\n};\r\n\r\nRedditPostsBodyItemMobile.propTypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\nexport default RedditPostsBodyItemMobile;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/pages/reddit/posts/content/body/body-item-mobile.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../../node_modules/postcss-loader/lib/index.js??postcss!./content-styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/pages/reddit/posts/content/content-styles.css\n// module id = 1888\n// module chunks = 3","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".redditPosts{margin:1vh 1vh 0;display:grid;grid-template-rows:4.5vh 71vh;grid-row-gap:1vh}.redditPosts__header{background:#474143;color:#e7e2da;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding-right:calc(1vh + 14px);text-align:center;padding-left:5px}.redditPosts__body{height:100%;overflow:auto;padding-right:1vh}.redditPosts__body::-webkit-scrollbar{width:13px;height:13px}.redditPosts__body::-webkit-scrollbar-thumb{background-color:#474143;border-radius:0;border-left:1px solid transparent}.redditPosts__body::-webkit-scrollbar-thumb:hover{background-color:#474143}.redditPosts__body::-webkit-scrollbar-track{background-color:#a69e9d;border-left:1px solid transparent}.redditPosts__body li{border-left:1px solid #474143!important;border-right:1px solid #474143!important;border-bottom:1px solid #474143!important}.redditPosts__body li:first-child{border-top:1px solid #474143!important}.redditPosts__body li a{display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:5px}.redditPosts__body .redditPosts__body--mobile{border:1px solid #a69e9d!important;margin-bottom:10px;-webkit-box-shadow:0 0 5px rgba(0,0,0,.5);box-shadow:0 0 5px rgba(0,0,0,.5)}.redditPosts__body .redditPosts__body--mobile:first-child{border-top:1px solid #a69e9d!important}.redditPosts__body .redditPosts__body--mobile:last-child{margin-bottom:0}.redditPosts__body .redditPosts__body--mobile a{-ms-flex-direction:column;flex-direction:column;position:relative}.redditPosts__body .redditPosts__body--mobile a>div{width:100%}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header{display:-ms-flexbox;display:flex;font-size:medium;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title{width:auto}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title>span{position:absolute;right:1vh;font-size:calc(3em + 1vmin);top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);opacity:.1}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created{width:auto;font-size:calc(.5em + 1vmin);text-align:left;opacity:.5}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body{margin:1vh 0;width:100%;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span{font-size:calc(.8em + 1vmin)!important}.redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p{font-size:calc(.6em + 1vmin)!important}.redditPosts__snippet--comments,.redditPosts__snippet--upvotes{width:10%}.redditPosts__snippet--created{width:20%;text-align:center;font-size:calc(.3em + 1vmin)}.redditPosts__snippet--title{width:60%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--title>span{margin-right:10px}.redditPosts__snippet--title .author{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;font-size:calc(.5em + .5vmin);opacity:.5}.redditPosts__snippet--title .author>span{color:#ff4006;margin-left:5px}.redditPosts__snippet--hasIcon,.redditPosts__snippet--title .author>span{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.redditPosts__snippet--hasIcon{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.redditPosts__snippet--hasIcon span{font-size:calc(.5em + 1vmin)!important;margin-bottom:3px}.redditPosts__snippet--hasIcon p{font-size:calc(.3em + 1vmin);opacity:.5}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/Sebastian/WebstormProjects/HearthLounge/src/containers/pages/reddit/posts/content/content-styles.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,iBAAsB,AACtB,aAAc,AACd,8BAA+B,AAC/B,gBAAkB,CAAE,AACpB,qBACE,mBAAoB,AACpB,cAAe,AACf,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,+BAAgC,AAChC,kBAAmB,AACnB,gBAAkB,CAAE,AACtB,mBACE,YAAa,AACb,cAAe,AACf,iBAAmB,CAAE,AACrB,sCACE,WAAY,AACZ,WAAa,CAAE,AACjB,4CACE,yBAA0B,AAC1B,gBAAiB,AACjB,iCAAmC,CAAE,AACvC,kDACE,wBAA0B,CAAE,AAC9B,4CACE,yBAA0B,AAC1B,iCAAmC,CAAE,AACvC,sBACE,wCAA0C,AAC1C,yCAA2C,AAC3C,yCAA4C,CAAE,AAC9C,kCACE,sCAAyC,CAAE,AAC7C,wBACE,oBAAqB,AACrB,aAAc,AACd,WAAY,AACZ,YAAa,AACb,qBAAsB,AAClB,uBAAwB,AAC5B,sBAAuB,AACnB,mBAAoB,AACxB,WAAa,CAAE,AACnB,8CACE,mCAAqC,AACrC,mBAAoB,AACpB,0CAA+C,AAC/C,iCAAuC,CAAE,AACzC,0DACE,sCAAyC,CAAE,AAC7C,yDACE,eAAiB,CAAE,AACrB,gDACE,0BAA2B,AACvB,sBAAuB,AAC3B,iBAAmB,CAAE,AACrB,oDACE,UAAY,CAAE,AAChB,8EACE,oBAAqB,AACrB,aAAc,AACd,iBAAmB,AACnB,kCAAmC,AAC/B,6BAA+B,CAAE,AACrC,2GACE,UAAe,CAAE,AACjB,gHACE,kBAAmB,AACnB,UAAW,AACX,4BAA6B,AAC7B,QAAS,AACT,mCAAoC,AAChC,+BAAgC,AAC5B,2BAA4B,AACpC,UAAY,CAAE,AAClB,6GACE,WAAe,AACf,6BAA8B,AAC9B,gBAAiB,AACjB,UAAY,CAAE,AAClB,4EACE,aAAc,AACd,WAAY,AACZ,mBAAoB,AACpB,gBAAiB,AACjB,0BAA2B,AACxB,sBAAwB,CAAE,AAC/B,8EACE,oBAAqB,AACrB,aAAc,AACd,2BAA4B,AACxB,6BAA8B,AAClC,+BAAgC,AAC5B,0BAA4B,CAAE,AAClC,mFACE,sCAAyC,CAAE,AAC7C,gFACE,sCAAyC,CAAE,AACrD,+DACE,SAAW,CAAE,AACf,+BACE,UAAW,AACX,kBAAmB,AACnB,4BAA8B,CAAE,AAClC,6BACE,UAAW,AACX,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,kCACE,iBAAmB,CAAE,AACvB,qCACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,mBAAoB,AACxB,8BAA+B,AAC/B,UAAY,CAAE,AACd,0CAKE,cAAe,AACf,eAAiB,CAAE,AACzB,yEANM,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAWF,AAR5B,+BAGE,0BAA2B,AACvB,sBAAuB,AAC3B,qBAAsB,AAClB,sBAAwB,CAEF,AAC1B,oCACE,uCAAyC,AACzC,iBAAmB,CAAE,AACvB,iCACE,6BAA8B,AAC9B,UAAY,CAAE\",\"file\":\"content-styles.css\",\"sourcesContent\":[\".redditPosts {\\r\\n  margin: 1vh 1vh 0 1vh;\\r\\n  display: grid;\\r\\n  grid-template-rows: 4.5vh 71vh;\\r\\n  grid-row-gap: 1vh; }\\r\\n  .redditPosts__header {\\r\\n    background: #474143;\\r\\n    color: #E7E2DA;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center;\\r\\n    padding-right: calc(1vh + 14px);\\r\\n    text-align: center;\\r\\n    padding-left: 5px; }\\r\\n  .redditPosts__body {\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    padding-right: 1vh; }\\r\\n    .redditPosts__body::-webkit-scrollbar {\\r\\n      width: 13px;\\r\\n      height: 13px; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb {\\r\\n      background-color: #474143;\\r\\n      border-radius: 0;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body::-webkit-scrollbar-thumb:hover {\\r\\n      background-color: #474143; }\\r\\n    .redditPosts__body::-webkit-scrollbar-track {\\r\\n      background-color: #A69E9D;\\r\\n      border-left: 1px solid transparent; }\\r\\n    .redditPosts__body li {\\r\\n      border-left: 1px solid #474143 !important;\\r\\n      border-right: 1px solid #474143 !important;\\r\\n      border-bottom: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li:first-child {\\r\\n        border-top: 1px solid #474143 !important; }\\r\\n      .redditPosts__body li a {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        width: 100%;\\r\\n        height: 100%;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        padding: 5px; }\\r\\n    .redditPosts__body .redditPosts__body--mobile {\\r\\n      border: 1px solid #A69E9D !important;\\r\\n      margin-bottom: 10px;\\r\\n      -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\r\\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5); }\\r\\n      .redditPosts__body .redditPosts__body--mobile:first-child {\\r\\n        border-top: 1px solid #A69E9D !important; }\\r\\n      .redditPosts__body .redditPosts__body--mobile:last-child {\\r\\n        margin-bottom: 0; }\\r\\n      .redditPosts__body .redditPosts__body--mobile a {\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n        position: relative; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a > div {\\r\\n          width: 100%; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          font-size: initial;\\r\\n          -ms-flex-direction: column-reverse;\\r\\n              flex-direction: column-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title {\\r\\n            width: initial; }\\r\\n            .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--title > span {\\r\\n              position: absolute;\\r\\n              right: 1vh;\\r\\n              font-size: calc(3em + 1vmin);\\r\\n              top: 50%;\\r\\n              -webkit-transform: translateY(-50%);\\r\\n                  -ms-transform: translateY(-50%);\\r\\n                      transform: translateY(-50%);\\r\\n              opacity: .1; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--header .redditPosts__snippet--created {\\r\\n            width: initial;\\r\\n            font-size: calc(.5em + 1vmin);\\r\\n            text-align: left;\\r\\n            opacity: .5; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--body {\\r\\n          margin: 1vh 0;\\r\\n          width: 100%;\\r\\n          white-space: nowrap;\\r\\n          overflow: hidden;\\r\\n          -o-text-overflow: ellipsis;\\r\\n             text-overflow: ellipsis; }\\r\\n        .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer {\\r\\n          display: -ms-flexbox;\\r\\n          display: flex;\\r\\n          -ms-flex-pack: space-evenly;\\r\\n              justify-content: space-evenly;\\r\\n          -ms-flex-direction: row-reverse;\\r\\n              flex-direction: row-reverse; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer span {\\r\\n            font-size: calc(.8em + 1vmin) !important; }\\r\\n          .redditPosts__body .redditPosts__body--mobile a .redditPosts__snippet--footer p {\\r\\n            font-size: calc(.6em + 1vmin) !important; }\\r\\n  .redditPosts__snippet--upvotes, .redditPosts__snippet--comments {\\r\\n    width: 10%; }\\r\\n  .redditPosts__snippet--created {\\r\\n    width: 20%;\\r\\n    text-align: center;\\r\\n    font-size: calc(.3em + 1vmin); }\\r\\n  .redditPosts__snippet--title {\\r\\n    width: 60%;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--title > span {\\r\\n      margin-right: 10px; }\\r\\n    .redditPosts__snippet--title .author {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n      font-size: calc(.5em + .5vmin);\\r\\n      opacity: .5; }\\r\\n      .redditPosts__snippet--title .author > span {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n        color: #ff4006;\\r\\n        margin-left: 5px; }\\r\\n  .redditPosts__snippet--hasIcon {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n    -ms-flex-pack: center;\\r\\n        justify-content: center;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center; }\\r\\n    .redditPosts__snippet--hasIcon span {\\r\\n      font-size: calc(.5em + 1vmin) !important;\\r\\n      margin-bottom: 3px; }\\r\\n    .redditPosts__snippet--hasIcon p {\\r\\n      font-size: calc(.3em + 1vmin);\\r\\n      opacity: .5; }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/containers/pages/reddit/posts/content/content-styles.css\n// module id = 1889\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./reddit-styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/pages/reddit/styles/reddit-styles.css\n// module id = 1890\n// module chunks = 3","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".subreddit__posts{grid-template-columns:100%}.subreddit__posts .container__page--inner .topbar{-ms-flex-pack:inherit;justify-content:inherit;background:#a69e9d}.subreddit__posts .container__page--inner .topbar li{margin:0 10px}.subreddit__posts .container__page--inner .topbar li a span{cursor:pointer;font-size:1vw;padding:5px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul{display:-ms-flexbox;display:flex;margin-top:2px}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li{margin-left:15px;color:#474143}.subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span{font-size:25px;padding:5px;text-transform:capitalize}@media only screen and (max-width:815px){.subreddit__posts .container__page--inner .topbar li{margin:0 5px}.subreddit__posts .redditPosts{grid-template-rows:100%;margin:0}.subreddit__posts .redditPosts .redditPosts__body{padding:1vh;overflow:-moz-scrollbars-none;-ms-overflow-style:none}.subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar{display:none}}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/Sebastian/WebstormProjects/HearthLounge/src/containers/pages/reddit/styles/reddit-styles.css\"],\"names\":[],\"mappings\":\"AAAA,kBACE,0BAA4B,CAAE,AAC9B,kDACE,sBAAuB,AACnB,wBAAyB,AAC7B,kBAAoB,CAAE,AACtB,qDACE,aAAe,CAAE,AACjB,4DACE,eAAgB,AAChB,cAAe,AACf,WAAa,CAAE,AACnB,0EACE,oBAAqB,AACrB,aAAc,AACd,sBAAuB,AACnB,kBAAoB,CAAE,AAC1B,6EACE,oBAAqB,AACrB,aAAc,AACd,cAAgB,CAAE,AAClB,gFACE,iBAAkB,AAClB,aAAe,CAAE,AACjB,uFACE,eAAgB,AAChB,YAAa,AACb,yBAA2B,CAAE,AAKzC,yCACE,qDACE,YAAc,CAAE,AAClB,+BACE,wBAAyB,AACzB,QAAU,CAAE,AACZ,kDACE,YAAa,AACb,8BAA+B,AAC/B,uBAAyB,CAAE,AAC3B,qEACE,YAAc,CAAE,CAAE\",\"file\":\"reddit-styles.css\",\"sourcesContent\":[\".subreddit__posts {\\r\\n  grid-template-columns: 100%; }\\r\\n  .subreddit__posts .container__page--inner .topbar {\\r\\n    -ms-flex-pack: inherit;\\r\\n        justify-content: inherit;\\r\\n    background: #A69E9D; }\\r\\n    .subreddit__posts .container__page--inner .topbar li {\\r\\n      margin: 0 10px; }\\r\\n      .subreddit__posts .container__page--inner .topbar li a span {\\r\\n        cursor: pointer;\\r\\n        font-size: 1vw;\\r\\n        padding: 5px; }\\r\\n    .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar {\\r\\n      display: -ms-flexbox;\\r\\n      display: flex;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center; }\\r\\n      .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        margin-top: 2px; }\\r\\n        .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li {\\r\\n          margin-left: 15px;\\r\\n          color: #474143; }\\r\\n          .subreddit__posts .container__page--inner .topbar .subreddit-posts-topbar ul li a span {\\r\\n            font-size: 25px;\\r\\n            padding: 5px;\\r\\n            text-transform: capitalize; }\\r\\n\\r\\n/*\\r\\n * Desktop\\r\\n */\\r\\n@media only screen and (max-width: 815px) {\\r\\n  .subreddit__posts .container__page--inner .topbar li {\\r\\n    margin: 0 5px; }\\r\\n  .subreddit__posts .redditPosts {\\r\\n    grid-template-rows: 100%;\\r\\n    margin: 0; }\\r\\n    .subreddit__posts .redditPosts .redditPosts__body {\\r\\n      padding: 1vh;\\r\\n      overflow: -moz-scrollbars-none;\\r\\n      -ms-overflow-style: none; }\\r\\n      .subreddit__posts .redditPosts .redditPosts__body::-webkit-scrollbar {\\r\\n        display: none; } }\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/containers/pages/reddit/styles/reddit-styles.css\n// module id = 1891\n// module chunks = 3"],"sourceRoot":""}